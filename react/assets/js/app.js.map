{
  "version": 3,
  "file": "generated.js",
  "sources": [
    "/home/navilan/openstax/deathmatch/code/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/associated_collection.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/choices.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/exercise.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/part.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/parts.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/question.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/questions.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/stubs/api.js",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/app.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/action_button.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/action_drawer.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/choice.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/choice_list.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/content.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/exercise.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/part.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/part_list.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/question.coffee",
    "/home/navilan/openstax/deathmatch/code/src/react/assets/js/components/question_list.coffee"
  ],
  "names": [],
  "mappings": "AAAA;ACAA,IAAA,8BAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,OACA,CAAQ,uBAAR,CADA,CAAA;;AAAA;AAIE,yCAAA,CAAA;;;;GAAA;;AAAA,iCAAA,KAAA,GAAO,SAAA,GAAA;AACL,IAAA,IAAG,sBAAA,IAAc,yBAAjB;AAAmC,aAAO,IAAC,CAAA,OAAQ,CAAA,CAAA,CAAhB,CAAnC;KADK;EAAA,CAAP,CAAA;;AAAA,iCAGA,YAAA,GAAc,SAAA,GAAA;WACZ,IAAC,CAAA,WAAW,CAAC,IAAI,CAAC,WAAlB,CAAA,EADY;EAAA,CAHd,CAAA;;AAAA,iCAMA,GAAA,GAAK,SAAA,GAAA;AACH,QAAA,KAAA;AAAA,IAAA,KAAA,GAAQ,IAAC,CAAA,KAAD,CAAA,CAAR,CAAA;AACA,IAAA,IAAG,KAAH;AAAc,aAAO,EAAA,GAAE,CAAA,KAAK,CAAC,GAAN,CAAA,CAAA,CAAF,GAAe,GAAf,GAAiB,CAAA,IAAC,CAAA,YAAD,CAAA,CAAA,CAAxB,CAAd;KAFG;EAAA,CANL,CAAA;;8BAAA;;GADiC,QAAQ,CAAC,WAH5C,CAAA;;AAAA,MAcM,CAAC,OAAP,GAAiB,oBAdjB,CAAA;;;;ACAA,IAAA,mBAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,OACA,CAAQ,uBAAR,CADA,CAAA;;AAAA,CAEA,GAAI,OAAA,CAAQ,YAAR,CAFJ,CAAA;;AAAA;AAME,2BAAA,CAAA;;;;GAAA;;AAAA,mBAAA,QAAA,GAAU,SAAA,GAAA;WACR,IAAC,CAAA,UAAU,CAAC,KAAZ,CAAA,EADQ;EAAA,CAAV,CAAA;;AAAA,mBAGA,QAAA,GAAU,SAAA,GAAA;WACR,IAAC,CAAA,GAAD,CAAK,UAAL,EADQ;EAAA,CAHV,CAAA;;AAAA,mBAMA,MAAA,GAAQ,SAAA,GAAA;WACN,MAAM,CAAC,YAAP,CAAoB,EAAA,GAAK,IAAC,CAAA,QAAD,CAAA,CAAzB,EADM;EAAA,CANR,CAAA;;AAAA,mBASA,SAAA,GAAW,SAAA,GAAA;WACT,IAAC,CAAA,IAAD,CAAA,CAAA,KAAW,QAAX,IAAwB,IAAC,CAAA,QAAD,CAAA,CAAA,GAAc,EAD7B;EAAA,CATX,CAAA;;AAAA,mBAYA,WAAA,GAAa,SAAA,GAAA;AACX,QAAA,4BAAA;AAAA,IAAA,QAAA,GAAW,CAAA,SAAA,KAAA,GAAA;aAAA,SAAA,GAAA;eACT,KAAC,CAAA,QAAD,CAAA,CAAA,KAAe,KAAC,CAAA,UAAU,CAAC,MAAZ,GAAqB,EAD3B;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAX,CAAA;AAAA,IAEA,kBAAA,GAAqB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAA,GAAA;eACnB,KAAC,CAAA,UAAU,CAAC,EAAZ,CAAe,KAAC,CAAA,QAAD,CAAA,CAAA,GAAc,CAA7B,CAA+B,CAAC,IAAhC,CAAA,CAAA,KAA4C,SADzB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAFrB,CAAA;WAIA,IAAC,CAAA,IAAD,CAAA,CAAA,KAAW,QAAX,IAAwB,CAAA,CAAK,QAAA,CAAA,CAAA,IAAc,kBAAA,CAAA,CAAf,EALjB;EAAA,CAZb,CAAA;;AAAA,mBAmBA,IAAA,GAAM,SAAA,GAAA;WACJ,IAAC,CAAA,GAAD,CAAK,MAAL,EADI;EAAA,CAnBN,CAAA;;AAAA,mBAsBA,MAAA,GAAQ,SAAA,GAAA;AACN,YAAO,IAAC,CAAA,IAAD,CAAA,CAAP;AAAA,WACO,QADP;eACqB,CAAA,GAAA,GAAO,IAAC,CAAA,QAAD,CAAA,EAD5B;AAAA,WAEO,KAFP;eAEmB,IAFnB;AAAA,WAGO,MAHP;eAGmB,MAHnB;AAAA;eAIO,IAAC,CAAA,GAAD,CAAK,QAAL,CAAc,CAAC,OAJtB;AAAA,KADM;EAAA,CAtBR,CAAA;;AAAA,mBA6BA,OAAA,GAAS,SAAC,KAAD,GAAA;AACP,QAAA,4DAAA;AAAA,IAAA,QAAA,GAAW,CAAA,CAAX,CAAA;AAAA,IACA,SAAA,GAAY,CADZ,CAAA;AAAA,IAEA,IAAA,GAAO,CAFP,CAAA;AAAA,IAIA,cAAA,GAAiB,SAAC,CAAD,EAAI,CAAJ,GAAA;AACf,cAAA,KAAA;AAAA,aACO,CAAA,KAAK,CADZ;iBACmB,KADnB;AAAA,eAEO,CAAA,GAAI,EAFX;iBAEkB,SAFlB;AAAA;iBAGO,UAHP;AAAA,OADe;IAAA,CAJjB,CAAA;AAAA,IAUA,MAAA,GAAS,cAAA,CAAe,IAAC,CAAA,MAAD,CAAA,CAAf,EAA0B,KAAK,CAAC,MAAN,CAAA,CAA1B,CAVT,CAAA;AAWA,IAAA,IAAG,MAAA,KAAU,IAAV,IAAmB,CAAA,IAAC,CAAA,IAAD,CAAA,CAAA,aAAW,KAAK,CAAC,IAAN,CAAA,EAAX,QAAA,KAA2B,OAA3B,CAAtB;AACE,MAAA,GAAA,GAAM,CAAC,CAAC,IAAF,CACE,CAAC,CAAC,GAAF,CAAM,IAAC,CAAA,MAAD,CAAA,CAAN,EAAiB,KAAK,CAAC,MAAN,CAAA,CAAjB,CADF,EAEI,SAAC,IAAD,GAAA;AAAY,YAAA,IAAA;AAAA,QAAV,aAAG,WAAO,CAAA;eAAA,CAAC,CAAC,OAAF,CAAU,CAAV,CAAA,KAAkB,KAA9B;MAAA,CAFJ,CAAN,CAAA;AAAA,MAGA,MAAA,GAAY,GAAH,GAAY,GAAI,CAAA,CAAA,CAAE,CAAC,OAAP,CAAe,GAAI,CAAA,CAAA,CAAnB,CAAZ,GAAwC,IAHjD,CADF;KAXA;WAgBA,OAjBO;EAAA,CA7BT,CAAA;;AAAA,mBAgDA,aAAA,GAAe,SAAC,GAAD,GAAA;AACb,IAAA,IAAG,IAAC,CAAA,IAAD,CAAA,CAAA,KAAW,OAAd;aAEE,IAAC,CAAA,GAAD,CAAK;AAAA,QAAC,QAAA,EAAU,GAAX;OAAL,EAFF;KADa;EAAA,CAhDf,CAAA;;AAAA,mBAqDA,UAAA,GAAY,SAAA,GAAA;AACV,QAAA,+DAAA;AAAA,IAAA,IAAG,IAAC,CAAA,IAAD,CAAA,CAAA,KAAW,OAAd;AACE,MAAA,OAAA,GAAU,IAAC,CAAA,UAAU,CAAC,MAAZ,CAAmB,CAAA,SAAA,KAAA,GAAA;eAAA,SAAC,CAAD,GAAA;iBAAO,CAAC,CAAC,IAAF,CAAA,CAAA,KAAY,SAAnB;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAAnB,CAAV,CAAA;AAAA,MACA,MAAA,GAAS,IAAC,CAAA,GAAD,CAAK,QAAL,CADT,CAAA;AAAA,MAEA,QAAA,GAAW,SAAC,MAAD,GAAA;eACT,CAAC,CAAC,QAAF,CAAW,MAAX,EAAmB,MAAM,CAAC,GAAP,CAAW,IAAX,CAAnB,EADS;MAAA,CAFX,CAAA;AAAA,MAIA,QAAA,GAAW,EAJX,CAAA;AAKC;WAAA,8CAAA;6BAAA;AAAA,sBAAA,CAAC,MAAD,EAAS,QAAA,CAAS,MAAT,CAAT,EAAA,CAAA;AAAA;sBANH;KADU;EAAA,CArDZ,CAAA;;AAAA,mBA8DA,MAAA,GAAQ,SAAA,GAAA;AACN,QAAA,UAAA;AAAA,IAAA,IAAG,IAAC,CAAA,IAAD,CAAA,CAAA,KAAW,OAAd;AACE,MAAA,UAAA,GAAa,IAAC,CAAA,GAAD,CAAK,QAAL,CAAc,CAAC,GAAf,CAAmB,CAAA,SAAA,KAAA,GAAA;eAAA,SAAC,GAAD,GAAA;iBAC9B,KAAC,CAAA,UAAU,CAAC,GAAZ,CAAgB,GAAhB,EAD8B;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAAnB,CAAb,CAAA;aAEA,CAAC,CAAC,MAAF,CAAS,UAAT,EAAqB,SAAC,EAAD,GAAA;eAAQ,EAAE,CAAC,QAAH,CAAA,EAAR;MAAA,CAArB,EAHF;KADM;EAAA,CA9DR,CAAA;;AAAA,mBAoEA,MAAA,GAAQ,SAAA,GAAA;AACN,QAAA,GAAA;AAAA,IAAA,IAAG,IAAC,CAAA,SAAD,CAAA,CAAH;AACG,MAAA,GAAA,GAAM,IAAC,CAAA,QAAD,CAAA,CAAN,CADH;KAAA;WAEE,IAAC,CAAA,UAAU,CAAC,IAAZ,CAAiB,GAAjB,EAAsB,GAAA,GAAI,CAA1B,EAHI;EAAA,CApER,CAAA;;AAAA,mBAyEA,QAAA,GAAU,SAAA,GAAA;AACR,QAAA,GAAA;AAAA,IAAA,IAAG,IAAC,CAAA,WAAD,CAAA,CAAH;AACG,MAAA,GAAA,GAAM,IAAC,CAAA,QAAD,CAAA,CAAN,CADH;KAAA;WAEE,IAAC,CAAA,UAAU,CAAC,IAAZ,CAAiB,GAAjB,EAAsB,GAAA,GAAI,CAA1B,EAHM;EAAA,CAzEV,CAAA;;gBAAA;;GAFmB,QAAQ,CAAC,gBAJ9B,CAAA;;AAAA,MAoFM,CAAC,OAAP,GAAiB,MApFjB,CAAA;;;;ACAA,IAAA,qDAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,oBACA,GAAuB,OAAA,CAAQ,mCAAR,CADvB,CAAA;;AAAA,MAEA,GAAS,OAAA,CAAQ,oBAAR,CAFT,CAAA;;AAAA,CAGA,GAAI,OAAA,CAAQ,QAAR,CAHJ,CAAA;;AAAA,CAIA,GAAI,OAAA,CAAQ,YAAR,CAJJ,CAAA;;AAAA;AAOE,4BAAA,CAAA;;;;GAAA;;AAAA,oBAAA,KAAA,GAAO,MAAP,CAAA;;AAAA,oBAEA,aAAA,GAAe,UAFf,CAAA;;AAAA,oBAIA,UAAA,GAAY,SAAA,GAAA;AACV,IAAA,IAAC,CAAA,QAAD,CAAU,IAAV,EAAgB,iBAAhB,EAAmC,IAAC,CAAA,qBAApC,CAAA,CAAA;WACA,IAAC,CAAA,QAAD,CAAU,IAAV,EAAgB,eAAhB,EAAiC,CAAA,SAAA,KAAA,GAAA;aAAA,SAAA,GAAA;eAAM,KAAC,CAAA,IAAD,CAAA,EAAN;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAjC,EAFU;EAAA,CAJZ,CAAA;;AAAA,oBAQA,UAAA,GAAY,SAAC,IAAD,EAAO,KAAP,GAAA;WACV,IAAI,CAAC,OAAL,CAAa,KAAb,EADU;EAAA,CARZ,CAAA;;AAAA,oBAWA,aAAA,GAAe,SAAC,OAAD,GAAA;;MAAC,UAAQ;KACtB;AAAA,IAAA,IAAG,IAAC,CAAA,MAAM,CAAC,MAAR,KAAkB,CAArB;AAA4B,YAAA,CAA5B;KAAA;AAAA,IAEA,CAAC,CAAC,QAAF,CACE,OADF,EAEE;AAAA,MACE,KAAA,EACE;AAAA,QAAA,KAAA,EAAO,CAAC,CAAC,GAAF,CAAO,IAAC,CAAA,MAAD,CAAQ,SAAC,KAAD,GAAA;iBAAW,KAAK,CAAC,WAAjB;QAAA,CAAR,CAAP,EAA6C,SAAC,KAAD,GAAA;iBAAW;AAAA,YAAC,EAAA,EAAI,KAAK,CAAC,GAAN,CAAU,IAAV,CAAL;AAAA,YAAsB,QAAA,EAAU,KAAK,CAAC,GAAN,CAAU,IAAC,CAAA,aAAX,CAAhC;YAAX;QAAA,CAA7C,CAAP;OAFJ;KAFF,CAFA,CAAA;WAQA,IAAC,CAAA,IAAD,CAAM,QAAN,EAAgB,IAAhB,EAAsB,OAAtB,EATa;EAAA,CAXf,CAAA;;AAAA,oBAsBA,qBAAA,GAAuB,SAAA,GAAA;WACrB,IAAC,CAAA,IAAD,CAAM,CAAA,SAAA,KAAA,GAAA;aAAA,SAAC,KAAD,EAAQ,KAAR,GAAA;eAAkB,KAAK,CAAC,GAAN,CAAU,KAAC,CAAA,aAAX,EAA0B,KAA1B,EAAlB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAN,EADqB;EAAA,CAtBvB,CAAA;;AAAA,oBAyBA,OAAA,GAAS,SAAA,GAAA;WACP,IAAC,CAAA,MAAD,CAAQ,SAAC,CAAD,GAAA;aAAO,CAAC,CAAC,IAAF,CAAA,CAAA,KAAY,SAAnB;IAAA,CAAR,EADO;EAAA,CAzBT,CAAA;;AAAA,oBA4BA,IAAA,GAAM,SAAC,IAAD,EAAO,EAAP,GAAA;AACJ,IAAA,IAAG,IAAA,YAAgB,QAAQ,CAAC,KAA5B;AAAuC,MAAA,IAAA,GAAO,IAAI,CAAC,GAAL,CAAS,IAAC,CAAA,aAAV,CAAP,CAAvC;KAAA;AAAA,IACA,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,EAAf,EAAmB,CAAnB,EAAsB,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,IAAf,EAAqB,CAArB,CAAwB,CAAA,CAAA,CAA9C,CADA,CAAA;AAAA,IAEA,IAAC,CAAA,qBAAD,CAAA,CAFA,CAAA;AAAA,IAGA,IAAC,CAAA,IAAD,CAAA,CAHA,CAAA;WAIA,IAAC,CAAA,aAAD,CACE;AAAA,MAAA,KAAA,EAAO,CAAA,SAAA,KAAA,GAAA;eAAA,SAAA,GAAA;iBAGL,KAAA,CAAM,wDAAN,EAHK;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAAP;KADF,EALI;EAAA,CA5BN,CAAA;;iBAAA;;GADoB,qBANtB,CAAA;;AAAA,MA+CM,CAAC,OAAP,GAAiB,OA/CjB,CAAA;;;;ACAA,IAAA,+BAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,OACA,CAAQ,uBAAR,CADA,CAAA;;AAAA,IAEA,GAAO,OAAA,CAAQ,kBAAR,CAFP,CAAA;;AAAA,KAGA,GAAQ,OAAA,CAAQ,mBAAR,CAHR,CAAA;;AAAA;AAOE,6BAAA,CAAA;;;;GAAA;;AAAA,qBAAA,OAAA,GAAS,gBAAT,CAAA;;AAAA,qBAEA,SAAA,GAAW;IACT;AAAA,MACE,IAAA,EAAM,QAAQ,CAAC,IADjB;AAAA,MAEE,GAAA,EAAK,OAFP;AAAA,MAGE,YAAA,EAAc,IAHhB;AAAA,MAIE,cAAA,EAAgB,KAJlB;KADS;GAFX,CAAA;;AAAA,qBAWA,QAAA,GACE;AAAA,IAAA,MAAA,EAAQ,EAAR;GAZF,CAAA;;kBAAA;;GAFqB,QAAQ,CAAC,gBALhC,CAAA;;AAAA,MAqBM,CAAC,OAAP,GAAiB,QArBjB,CAAA;;;;ACAA,IAAA,yBAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,OACA,CAAQ,uBAAR,CADA,CAAA;;AAAA,SAEA,GAAY,OAAA,CAAQ,uBAAR,CAFZ,CAAA;;AAAA;AAME,yBAAA,CAAA;;;;GAAA;;AAAA,iBAAA,QAAA,GACE;AAAA,IAAA,QAAA,EAAU,CAAA,CAAV;AAAA,IACA,MAAA,EAAQ,CAAA,CADR;GADF,CAAA;;AAAA,iBAIA,SAAA,GAAW;IACT;AAAA,MACE,IAAA,EAAM,QAAQ,CAAC,IADjB;AAAA,MAEE,GAAA,EAAK,WAFP;AAAA,MAGE,cAAA,EAAgB,SAHlB;KADS;GAJX,CAAA;;cAAA;;GAFiB,QAAQ,CAAC,gBAJ5B,CAAA;;AAAA,MAkBM,CAAC,OAAP,GAAiB,IAlBjB,CAAA;;;;ACAA,IAAA,iCAAA;EAAA;iSAAA;;AAAA,oBAAA,GAAuB,OAAA,CAAQ,mCAAR,CAAvB,CAAA;;AAAA,IACA,GAAO,OAAA,CAAQ,kBAAR,CADP,CAAA;;AAAA;AAIE,0BAAA,CAAA;;;;GAAA;;AAAA,kBAAA,KAAA,GAAO,IAAP,CAAA;;eAAA;;GADkB,qBAHpB,CAAA;;AAAA,MAMM,CAAC,OAAP,GAAiB,KANjB,CAAA;;;;ACAA,IAAA,8BAAA;EAAA;iSAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR,CAAX,CAAA;;AAAA,OACA,CAAQ,uBAAR,CADA,CAAA;;AAAA,OAEA,GAAU,OAAA,CAAQ,qBAAR,CAFV,CAAA;;AAAA,CAGA,GAAI,OAAA,CAAQ,YAAR,CAHJ,CAAA;;AAAA;AAOE,6BAAA,CAAA;;;;GAAA;;AAAA,qBAAA,QAAA,GACE;AAAA,IAAA,IAAA,EAAM,0BAAN;GADF,CAAA;;AAAA,qBAGA,MAAA,GAAQ,SAAA,GAAA;AACN,QAAA,MAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,GAAD,CAAK,SAAL,CAAe,CAAC,OAAhB,CAAwB,MAAxB,CAAT,CAAA;WACA,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa;AAAA,MAAC,GAAA,EAAK,CAAN;AAAA,MAAS,IAAA,EAAM,CAAf;AAAA,MAAkB,MAAA,EAAQ,CAA1B;AAAA,MAA6B,KAAA,EAAO,CAApC;KAAb,EAAqD,MAArD,EAFM;EAAA,CAHR,CAAA;;AAAA,qBAOA,WAAA,GAAa,SAAA,GAAA;AACX,QAAA,SAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,MAAD,CAAA,CAAT,CAAA;AAAA,IACA,CAAA,GAAI,MAAM,CAAC,MADX,CAAA;WAEA,CAAA,IAAK,CAAL,IAAW,MAAM,CAAC,KAAP,GAAe,UAAC,GAAK,EAAL,GAAS,CAAC,CAAA,GAAI,CAAL,CAAV,EAHf;EAAA,CAPb,CAAA;;AAAA,qBAYA,SAAA,GAAW,SAAA,GAAA;AACT,QAAA,MAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,MAAD,CAAA,CAAT,CAAA;WACA,MAAM,CAAC,GAAP,KAAc,CAAd,IAAoB,MAAM,CAAC,MAAP,IAAiB,EAF5B;EAAA,CAZX,CAAA;;AAAA,qBAgBA,UAAA,GAAY,SAAA,GAAA;AACV,QAAA,MAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,MAAD,CAAA,CAAT,CAAA;WACA,MAAM,CAAC,MAAP,GAAgB,CAAhB,IAAsB,MAAM,CAAC,IAAP,KAAe,EAF3B;EAAA,CAhBZ,CAAA;;AAAA,qBAoBA,SAAA,GAAW;IACT;AAAA,MACE,IAAA,EAAM,QAAQ,CAAC,IADjB;AAAA,MAEE,GAAA,EAAK,SAFP;AAAA,MAGE,cAAA,EAAgB,OAHlB;KADS;GApBX,CAAA;;kBAAA;;GAFqB,QAAQ,CAAC,gBALhC,CAAA;;AAAA,MAmCM,CAAC,OAAP,GAAiB,QAnCjB,CAAA;;;;ACAA,IAAA,yCAAA;EAAA;iSAAA;;AAAA,oBAAA,GAAuB,OAAA,CAAQ,mCAAR,CAAvB,CAAA;;AAAA,QACA,GAAW,OAAA,CAAQ,sBAAR,CADX,CAAA;;AAAA;AAIE,8BAAA,CAAA;;;;GAAA;;AAAA,sBAAA,KAAA,GAAO,QAAP,CAAA;;mBAAA;;GADsB,qBAHxB,CAAA;;AAAA,MAOM,CAAC,OAAP,GAAiB,SAPjhPA,IAAA,wCAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,QAEA,GAAW,OAAA,CAAQ,uBAAR,CAFX,CAAA;;AAAA,aAGA,GAAgB,OAAA,CAAQ,uDAAR,CAHhB,CAAA;;AAAA,OAIA,CAAQ,wCAAR,CAJA,CAAA;;AAAA,QAMA,GAAe,IAAA,aAAA,CACb;AAAA,EAAA,EAAA,EAAI,CAAJ;AAAA,EACA,KAAA,EAAO,EADP;CADa,CANf,CAAA;;AAAA,KAUK,CAAC,eAAN,CAAsB,QAAA,CAAS;AAAA,EAAC,OAAA,EAAU,QAAX;CAAT,CAAtB,EACE,QAAQ,CAAC,cAAT,CAAwB,iBAAxB,CADF,CAVA,CAAA;;;;ACAA,IAAA,mBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,YAGA,GAAe,KAAK,CAAC,WAAN,CAEb;AAAA,EAAA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,MAAA,EAAQ,KAAR;AAAA,MACA,UAAA,EAAY,EADZ;AAAA,MAEA,eAAA,EAAiB,QAFjB;AAAA,MAGA,eAAA,EAAiB,WAHjB;AAAA,MAIA,kBAAA,EAAoB,EAJpB;MADe;EAAA,CAAjB;AAAA,EAOA,SAAA,EACE;AAAA,IAAA,MAAA,EAAQ,KAAK,CAAC,SAAS,CAAC,IAAxB;AAAA,IACA,QAAA,EAAU,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAD/B;AAAA,IAEA,UAAA,EAAY,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAFnC;AAAA,IAGA,UAAA,EAAY,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAHnC;AAAA,IAIA,WAAA,EAAa,KAAK,CAAC,SAAS,CAAC,MAJ7B;GARF;AAAA,EAcA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,KAAK,CAAC,QAAP,CAAgB,IAAC,CAAA,KAAK,CAAC,UAAvB,EADY;EAAA,CAdd;AAAA,EAiBA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,kCAAA;AAAA,IAAA,OAAA,GAAU;AAAA,MAAA,MAAA,EAAQ,IAAC,CAAA,KAAK,CAAC,MAAf;KAAV,CAAA;AAAA,IACA,OAAQ,CAAA,IAAC,CAAA,KAAK,CAAC,eAAP,CAAR,GAAkC,IADlC,CAAA;AAAA,IAEA,OAAQ,CAAA,IAAC,CAAA,KAAK,CAAC,eAAP,CAAR,GAAkC,IAFlC,CAAA;AAIA;AAAA,SAAA,2CAAA;2BAAA;AACE,MAAA,OAAQ,CAAA,SAAA,CAAR,GAAqB,IAArB,CADF;AAAA,KAJA;AAAA,IAMA,OAAA,GAAU,KAAK,CAAC,MAAM,CAAC,QAAb,CAAsB,OAAtB,CANV,CAAA;WAOA,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,WAAA,EAAc,OAAf;AAAA,MACf,OAAA,EAAU,IAAC,CAAA,KAAK,CAAC,WADF;AAAA,MAEf,MAAA,EAAS,IAAC,CAAA,KAAK,CAAC,UAFD;AAAA,MAGf,SAAA,EAAY,IAAC,CAAA,YAHE;KAAjB,EAGgC,IAAC,CAAA,KAAK,CAAC,UAHvC,EARM;EAAA,CAjBR;CAFa,CAHf,CAAA;;AAAA,MAmCM,CAAC,OAAP,GAAiB,YAnCjB,CAAA;;;;ACAA,IAAA,mBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,YAEA,GAAe,KAAK,CAAC,WAAN,CAEb;AAAA,EAAA,MAAA,EAAQ,SAAA,GAAA;WACN,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa,IAAb,EAAoB,IAAC,CAAA,KAAK,CAAC,KAA3B,CADF,EAEG,IAAC,CAAA,KAAK,CAAC,QAFV,EADM;EAAA,CAAR;CAFa,CAFf,CAAA;;AAAA,MAUM,CAAC,OAAP,GAAiB,YAVjB,CAAA;;;;ACAA,IAAA,mHAAA;EAAA,qJAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,CAEA,GAAI,OAAA,CAAQ,YAAR,CAFJ,CAAA;;AAAA,MAIA,GAAS,OAAA,CAAQ,iBAAR,CAJT,CAAA;;AAAA,OAKA,GAAU,OAAA,CAAQ,WAAR,CALV,CAAA;;AAAA,MAMA,GAAS,OAAA,CAAQ,iBAAR,CANT,CAAA;;AAAA,iBAQA,GAAoB,KAAK,CAAC,WAAN,CAClB;AAAA,EAAA,WAAA,EAAa,mBAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,iBAAA,EAAmB,SAAA,GAAA;AAAM,iBAAN;MAAA,CAAnB;MADe;EAAA,CALjB;AAAA,EAQA,UAAA,EAAY,SAAA,GAAA;WACV,IAAC,CAAA,KAAK,CAAC,iBAAP,CAAA,EADU;EAAA,CARZ;AAAA,EAWA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,uBAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,MAAb,CAAA,CAAT,CAAA;AAAA,IACA,UAAA,GACK,MAAM,CAAC,MAAP,GAAgB,CAAnB,GACE,CAAA,GAAA,GAAM,CAAC,CAAC,GAAF,CAAM,CAAC,CAAC,OAAF,CAAU,MAAV,CAAN,EAAyB,SAAC,CAAD,GAAA;aAAQ,GAAA,GAAE,CAAA,CAAC,CAAC,MAAF,CAAA,CAAA,CAAF,GAAc,IAAtB;IAAA,CAAzB,CAAkD,CAAC,IAAnD,CAAwD,IAAxD,CAAN,EACA,GAAA,IAAO,KADP,EAEA,GAAA,IAAQ,GAAA,GAAE,CAAA,CAAC,CAAC,IAAF,CAAO,MAAP,CAAc,CAAC,MAAf,CAAA,CAAA,CAAF,GAA2B,GAFnC,EAGA,GAHA,CADF,GAME,yCARJ,CAAA;WAUA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,gDAAd;AAAA,MAAgE,SAAA,EAAY,IAAC,CAAA,UAA7E;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,WAAA,EAAa,2BAAd;AAAA,MACT,OAAA,EAAS,mBADA;AAAA,MAET,SAAA,EAAY,IAAC,CAAA,UAFJ;KAAjB,EAEmC,MAFnC,CADF,EAME,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,QAAd;KAAd,EACG,UADH,CANF,EAXM;EAAA,CAXR;CADkB,CARpB,CAAA;;AAAA,iBA0CA,GAAoB,KAAK,CAAC,WAAN,CAClB;AAAA,EAAA,WAAA,EAAa,mBAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,UAAA,EAAY,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,CAAZ;MADe;EAAA,CALjB;AAAA,EAQA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,YAAA,EAAc,SAAA,GAAA;AAAM,iBAAN;MAAA,CAAd;AAAA,MACA,aAAA,EAAe,SAAA,GAAA;AAAM,iBAAN;MAAA,CADf;MADe;EAAA,CARjB;AAAA,EAYA,YAAA,EAAc,SAAA,GAAA;AACZ,QAAA,yBAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,IAAI,CAAC,MAAM,CAAC,UAAb,CAAA,CAAyB,CAAC,oBAA1B,CAA+C,OAA/C,CAAT,CAAA;AAAA,IACA,UAAA;;AAAc;WAAA,6CAAA;2BAAA;YAA+C,KAAK,CAAC,OAAN,KAAiB;AAAhE,wBAAA,QAAA,CAAS,KAAK,CAAC,KAAf,EAAA;SAAA;AAAA;;QADd,CAAA;WAEA,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,UAAA,EAAY,UAAZ;KADF,EAHY;EAAA,CAZd;AAAA,EAkBA,WAAA,EAAa,SAAC,KAAD,GAAA;WACX,KAAK,CAAC,aAAa,CAAC,oBAApB,CAAyC,OAAzC,CAAkD,CAAA,CAAA,CAAE,CAAC,OAArD,GAA+D,KADpD;EAAA,CAlBb;AAAA,EAqBA,UAAA,EAAY,SAAA,GAAA;AACV,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,aAAb,CAA2B,IAAC,CAAA,KAAK,CAAC,UAAlC,CAAA,CAAA;AAAA,IACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IADb,CAAA;AAAA,IAEA,IAAC,CAAA,KAAK,CAAC,aAAP,CAAA,CAFA,CAAA;WAGA,MAJU;EAAA,CArBZ;AAAA,EA2BA,YAAA,EAAc,SAAA,GAAA;AACZ,IAAA,IAAC,CAAA,KAAK,CAAC,YAAP,CAAA,CAAA,CAAA;WACA,MAFY;EAAA,CA3Bd;AAAA,EA+BA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,0CAAA;AAAA,IAAA,UAAA,GAAa,IAAC,CAAA,KAAK,CAAC,UAApB,CAAA;AAAA,IACA,cAAA,GAAiB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAC,MAAD,GAAA;AACf,YAAA,IAAA;eAAA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,UAAC,WAAA,EAAa,2BAAd;AAAA,UAA2C,SAAA,EAAY,KAAC,CAAA,WAAxD;SAAd,EACE,KAAK,CAAC,GAAG,CAAC,KAAV,CAAgB;AAAA,UAAC,MAAA,EAAQ,UAAT;AAAA,UACT,UAAA,EAAa,KAAC,CAAA,YADL;AAAA,UAET,OAAA,EAAU,MAAM,CAAC,GAAP,CAAW,IAAX,CAFD;AAAA,UAGT,SAAA,EAAW,QAAC,MAAM,CAAC,EAAP,EAAA,eAAa,UAAb,EAAA,IAAA,MAAD,CAHF;SAAhB,CADF,EAME,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,UAAC,WAAA,EAAa,eAAd;SAAd,EAA8C,GAA9C,EAAoD,MAAM,CAAC,MAAP,CAAA,CAApD,EAAsE,GAAtE,CANF,EAOE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,UAAC,WAAA,EAAa,gBAAd;AAAA,UAAgC,yBAAA,EAA4B;AAAA,YAAA,MAAA,EAAQ,MAAM,CAAC,GAAP,CAAW,SAAX,CAAR;WAA5D;SAAd,CAPF,EADe;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CADjB,CAAA;AAAA,IAWA,MAAA;;AAAU;AAAA;WAAA,2CAAA;0BAAA;AAAA,sBAAA,cAAA,CAAe,MAAf,EAAA,CAAA;AAAA;;iBAXV,CAAA;WAYA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,4BAAd;AAAA,MAA4C,KAAA,EAAO,QAAnD;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,+BAAd;AAAA,MAA+C,UAAA,EAAa,IAAC,CAAA,UAA7D;KAAf,EACG,MADH,EAEE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,WAAA,EAAa,kBAAd;AAAA,MAAkC,OAAA,EAAS,gBAA3C;AAAA,MAA6D,SAAA,EAAY,IAAC,CAAA,YAA1E;KAAjB,EAA2G,QAA3G,CADF,EAIE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,MAAA,EAAQ,QAAT;AAAA,MAAmB,WAAA,EAAa,gBAAhC;AAAA,MAAkD,OAAA,EAAS,cAA3D;KAAjB,EAA6F,MAA7F,CAJF,CAFF,CADF,EAbM;EAAA,CA/BR;CADkB,CA1CpB,CAAA;;AAAA,WAqGA,GAAc,KAAK,CAAC,WAAN,CACZ;AAAA,EAAA,WAAA,EAAa,aAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,eAAA,EAAiB,SAAA,GAAA;AACf,QAAA,YAAA;AAAA,IAAA,MAAA,GAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,CAAT,CAAA;AAAA,IACA,IAAA,GAAU,gBAAA,IAAY,MAAM,CAAC,MAAP,GAAgB,CAA/B,GAAsC,MAAtC,GAAkD,MADzD,CAAA;WAEA;AAAA,MAAA,IAAA,EAAM,IAAN;MAHe;EAAA,CALjB;AAAA,EAUA,MAAA,EAAQ,SAAA,GAAA;WACN,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,IAAA,EAAM,MAAN;KADF,EADM;EAAA,CAVR;AAAA,EAcA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,IAAA,EAAM,MAAN;KADF,EADY;EAAA,CAdd;AAAA,EAkBA,MAAA,EAAQ,SAAA,GAAA;AACN,IAAA,IAAG,IAAC,CAAA,KAAK,CAAC,IAAP,KAAe,MAAlB;aACE,iBAAA,CAAkB;AAAA,QAChB,OAAA,EAAU,IAAC,CAAA,KAAK,CAAC,KADD;AAAA,QAEhB,eAAA,EAAkB,IAAC,CAAA,YAFH;AAAA,QAGhB,cAAA,EAAiB,IAAC,CAAA,YAHF;OAAlB,EADF;KAAA,MAAA;aAME,iBAAA,CAAkB;AAAA,QAChB,OAAA,EAAU,IAAC,CAAA,KAAK,CAAC,KADD;AAAA,QAEhB,mBAAA,EAAsB,IAAC,CAAA,MAFP;OAAlB,EANF;KADM;EAAA,CAlBR;CADY,CArGd,CAAA;;AAAA,SAmIA,GAAY,KAAK,CAAC,WAAN,CACV;AAAA,EAAA,WAAA,EAAa,WAAb;AAAA,EAEA,MAAA,EAAQ,SAAA,GAAA;WACN,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,oCAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,YAAd;KAAf,EAA4C,oBAA5C,CADF,EADM;EAAA,CAFR;CADU,CAnIZ,CAAA;;AAAA,UA2IA,GAAa,KAAK,CAAC,WAAN,CACX;AAAA,EAAA,WAAA,EAAa,YAAb;AAAA,EAEA,MAAA,EAAQ,SAAA,GAAA;WACN,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,oCAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,aAAd;KAAf,EAA6C,qBAA7C,CADF,EADM;EAAA,CAFR;CADW,CA3Ib,CAAA;;AAAA,MAmJA,GAAS,KAAK,CAAC,WAAN,CACP;AAAA,EAAA,WAAA,EAAa,QAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,iBAAA,EAAmB,SAAA,GAAA;WACjB;AAAA,MAAA,OAAA,EAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,SAAjB,CAAT;MADiB;EAAA,CALnB;AAAA,EAQA,eAAA,EAAiB,SAAA,GAAA;WACf,IAAC,CAAA,iBAAD,CAAA,EADe;EAAA,CARjB;AAAA,EAWA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CAAU,IAAC,CAAA,iBAAD,CAAA,CAAV,EADY;EAAA,CAXd;AAAA,EAcA,iBAAA,EAAmB,SAAA,GAAA;WACjB,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,EAAb,CAAgB,QAAhB,EAA0B,IAAC,CAAA,YAA3B,EAAyC,IAAzC,EADiB;EAAA,CAdnB;AAAA,EAiBA,oBAAA,EAAsB,SAAA,GAAA;WACpB,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,EAA2B,IAAC,CAAA,YAA5B,EAA0C,IAA1C,EADoB;EAAA,CAjBtB;AAAA,EAoBA,aAAA,EAAe,SAAC,OAAD,GAAA;AACb,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB;AAAA,MAAC,OAAA,EAAS,OAAV;KAAjB,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IAAb,CAAA,EAFa;EAAA,CApBf;AAAA,EAwBA,cAAA,EAAgB,SAAA,GAAA;WACd,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,MAAC,IAAA,EAAM,IAAP;KAArB,EADc;EAAA,CAxBhB;AAAA,EA2BA,cAAA,EAAgB,SAAA,GAAA;WACd,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,MAAb,CAAA,EADc;EAAA,CA3BhB;AAAA,EA8BA,gBAAA,EAAkB,SAAA,GAAA;WAChB,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,QAAb,CAAA,EADgB;EAAA,CA9BlB;AAAA,EAiCA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,iCAAA;AAAA,IAAA,OAAA,GAAU,IAAC,CAAA,KAAK,CAAC,OAAjB,CAAA;AAAA,IACA,WAAA,GAAe,UAAA,GAAS,CAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,MAAb,CAAA,CAAA,CAAT,GAAgC,GAD/C,CAAA;AAAA,IAEA,WAAA;AAAc,cAAO,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IAAb,CAAA,CAAP;AAAA,aACP,QADO;iBAEV,OAAA,CAAQ;AAAA,YACN,YAAA,EAAc,8BADR;AAAA,YAEN,aAAA,EAAe,uBAFT;AAAA,YAGN,SAAA,EAAY,OAHN;AAAA,YAIN,eAAA,EAAkB,IAAC,CAAA,aAJb;WAAR,EAFU;AAAA,aAQP,OARO;iBASV,WAAA,CAAY;AAAA,YAAC,OAAA,EAAU,IAAC,CAAA,KAAK,CAAC,KAAlB;WAAZ,EATU;AAAA,aAUP,KAVO;iBAWV,SAAA,CAAU,IAAV,EAXU;AAAA,aAYP,MAZO;iBAaV,UAAA,CAAW,IAAX,EAbU;AAAA;iBAeV,OAAO,CAAC,GAAR,CAAY,qBAAZ,EAfU;AAAA;iBAFd,CAAA;WAmBA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa;AAAA,MAAC,WAAA,EAAa,6BAAd;KAAb,EACG,WADH,EAEE,MAAA,CAAO;AAAA,MAAC,OAAA,EAAU,WAAX;KAAP,EACE,MAAA,CAAO;AAAA,MACL,QAAA,EAAW,CAAA,IAAK,CAAA,KAAK,CAAC,KAAK,CAAC,SAAb,CAAA,CADV;AAAA,MAEL,aAAA,EAAe,gBAFV;AAAA,MAGL,YAAA,EAAc,SAHT;AAAA,MAIL,YAAA,EAAc,QAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,cALT;KAAP,CADF,EAQE,MAAA,CAAO;AAAA,MACL,QAAA,EAAW,CAAA,IAAK,CAAA,KAAK,CAAC,KAAK,CAAC,WAAb,CAAA,CADV;AAAA,MAEL,aAAA,EAAe,kBAFV;AAAA,MAGL,YAAA,EAAc,WAHT;AAAA,MAIL,YAAA,EAAc,UAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,gBALT;KAAP,CARF,EAeE,MAAA,CAAO;AAAA,MACL,aAAA,EAAe,oBADV;AAAA,MAEL,YAAA,EAAc,eAFT;AAAA,MAGL,YAAA,EAAc,cAHT;AAAA,MAIL,UAAA,EAAa,IAAC,CAAA,cAJT;KAAP,CAfF,CAFF,EApBM;EAAA,CAjCR;CADO,CAnJT,CAAA;;AAAA,MAmOM,CAAC,OAAP,GAAiB,MAnOjB,CAAA;;;;ACAA,IAAA,yBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,MAGA,GAAS,OAAA,CAAQ,UAAR,CAHT,CAAA;;AAAA,UAKA,GAAa,KAAK,CAAC,WAAN,CACX;AAAA,EAAA,WAAA,EAAa,YAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,UAAA,EAAY,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAnC;GAHF;AAAA,EAKA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,OAAA;AAAA,IAAA,OAAA,GAAU,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,GAAlB,CAAsB,SAAC,KAAD,GAAA;aAC9B,MAAA,CAAO;AAAA,QAAC,KAAA,EAAQ,KAAK,CAAC,EAAf;AAAA,QAAoB,OAAA,EAAU,KAA9B;OAAP,EAD8B;IAAA,CAAtB,CAAV,CAAA;WAEA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa;AAAA,MAAC,WAAA,EAAa,SAAd;KAAb,EACG,OADH,EAHM;EAAA,CALR;CADW,CALb,CAAA;;AAAA,MAkBM,CAAC,OAAP,GAAiB,UAlBjB,CAAA;;;;ACAA,IAAA,qCAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,KAEA,GAAQ,OAAA,CAAQ,SAAR,CAFR,CAAA;;AAAA,MAIA,GAAS,KAAK,CAAC,WAAN,CACP;AAAA,EAAA,WAAA,EAAa,eAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,OAAA,EAAS,KAAK,CAAC,SAAS,CAAC,MAAzB;GAHF;AAAA,EAKA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,aAAA,EAAe,SAAA,GAAA;AAAM,iBAAN;MAAA,CAAf;MADe;EAAA,CALjB;AAAA,EAQA,UAAA,EAAY,SAAA,GAAA;WACV,IAAC,CAAA,KAAK,CAAC,aAAP,CAAA,EADU;EAAA,CARZ;AAAA,EAWA,MAAA,EAAQ,SAAA,GAAA;AACN,IAAA,IAAG,4BAAA,IAAoB,IAAC,CAAA,KAAK,CAAC,OAAP,KAAoB,EAA3C;aACE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,QAAC,WAAA,EAAa,4BAAd;AAAA,QAA4C,SAAA,EAAY,IAAC,CAAA,UAAzD;OAAd,EACE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,QAAC,WAAA,EAAa,2BAAd;AAAA,QACf,OAAA,EAAU,IAAC,CAAA,KAAK,CAAC,WADF;AAAA,QAEf,SAAA,EAAY,IAAC,CAAA,UAFE;OAAjB,EAE6B,MAF7B,CADF,EAIE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,QAAC,WAAA,EAAa,QAAd;AAAA,QAAwB,yBAAA,EAA4B;AAAA,UAAA,MAAA,EAAQ,IAAC,CAAA,KAAK,CAAC,OAAf;SAApD;OAAd,CAJF,EADF;KAAA,MAAA;aASE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,QAAC,WAAA,EAAa,oBAAd;AAAA,QAAoC,SAAA,EAAY,IAAC,CAAA,UAAjD;OAAd,EACE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,QAAC,WAAA,EAAa,eAAd;OAAd,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,QAAC,WAAA,EAAa,gBAAd;OAAf,EAAiD,IAAC,CAAA,KAAK,CAAC,UAAxD,CADF,CADF,EATF;KADM;EAAA,CAXR;CADO,CAJT,CAAA;;AAAA,MAgCA,GAAS,KAAK,CAAC,WAAN,CACP;AAAA,EAAA,WAAA,EAAa,eAAb;AAAA,EAEA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,OAAA,EACE;AAAA,QAAA,MAAA,EAAQ,IAAR;OADF;MADe;EAAA,CAFjB;AAAA,EAMA,SAAA,EACE;AAAA,IAAA,OAAA,EAAS,KAAK,CAAC,SAAS,CAAC,MAAzB;GAPF;AAAA,EASA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,aAAA,EAAe,SAAA,GAAA;AAAM,iBAAN;MAAA,CAAf;AAAA,MACA,YAAA,EAAc,SAAA,GAAA;AAAM,iBAAN;MAAA,CADd;AAAA,MAEA,OAAA,EAAS,EAFT;AAAA,MAGA,KAAA,EAAO,MAHP;MADe;EAAA,CATjB;AAAA,EAeA,KAAA,EAAO,SAAA,GAAA;WACL,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAtB,CAAA,EADK;EAAA,CAfP;AAAA,EAkBA,gBAAA,EAAkB,SAAA,GAAA;AAChB,QAAA,MAAA;AAAA,IAAA,MAAA,GAAa,IAAA,KAAA,CAAM,IAAC,CAAA,IAAI,CAAC,MAAM,CAAC,UAAb,CAAA,CAAN,EAAiC;AAAA,MAAA,KAAA,EAAO,IAAC,CAAA,KAAK,CAAC,KAAd;KAAjC,CAAb,CAAA;AAAA,IACA,MAAM,CAAC,SAAP,CAAiB,SAAjB,EACE;AAAA,MAAA,SAAA,EAAW,IAAC,CAAA,IAAI,CAAC,OAAO,CAAC,UAAd,CAAA,CAAX;KADF,CADA,CAAA;AAAA,IAGA,MAAM,CAAC,SAAP,CAAiB,SAAjB,EACE;AAAA,MAAA,SAAA,EAAW,IAAC,CAAA,IAAI,CAAC,MAAM,CAAC,UAAb,CAAA,CAAX;KADF,CAHA,CAAA;AAAA,IAKA,MAAM,CAAC,OAAP,CAAe,IAAC,CAAA,KAAK,CAAC,OAAtB,CALA,CAAA;WAMA,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAf,GAAwB,OAPR;EAAA,CAlBlB;AAAA,EA2BA,iBAAA,EAAmB,SAAA,GAAA;WACjB,IAAC,CAAA,gBAAD,CAAA,EADiB;EAAA,CA3BnB;AAAA,EA8BA,kBAAA,EAAoB,SAAA,GAAA;WAClB,IAAC,CAAA,gBAAD,CAAA,EADkB;EAAA,CA9BpB;AAAA,EAiCA,yBAAA,EAA2B,SAAC,QAAD,GAAA;WACzB,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAtB,CAA8B,QAAQ,CAAC,OAAvC,EADyB;EAAA,CAjC3B;AAAA,EAoCA,UAAA,EAAY,SAAA,GAAA;WACV,IAAC,CAAA,KAAK,CAAC,aAAP,CAAqB,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAtB,CAAA,CAArB,EADU;EAAA,CApCZ;AAAA,EAuCA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,KAAK,CAAC,YAAP,CAAoB,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAtB,CAAA,CAApB,EADY;EAAA,CAvCd;AAAA,EA0CA,MAAA,EAAQ,SAAA,GAAA;WACN,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,kBAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,QAAd;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,YAAd;AAAA,MAA4B,KAAA,EAAO,SAAnC;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,iBAAd;KAAf,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,MAAV;AAAA,MAAkB,WAAA,EAAa,0BAA/B;KAAf,CADF,EAEE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAf,CAFF,EAGE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,QAAV;AAAA,MAAoB,WAAA,EAAa,4BAAjC;KAAf,CAHF,EAIE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAf,CAJF,EAKE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,WAAV;AAAA,MAAuB,WAAA,EAAa,+BAApC;KAAf,CALF,EAME,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAf,CANF,EAOE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,eAAV;AAAA,MAA2B,WAAA,EAAa,4BAAxC;KAAf,CAPF,CADF,EAUE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,iBAAd;KAAf,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,MAAV;AAAA,MAAkB,WAAA,EAAa,0BAA/B;KAAf,CADF,EAEE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAf,CAFF,EAGE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,QAAV;AAAA,MAAoB,WAAA,EAAa,4BAAjC;KAAf,CAHF,EAIE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,qBAAd;KAAf,CAJF,EAKE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,OAAA,EAAS,gBAAV;AAAA,MAA4B,cAAA,EAAgB,MAA5C;AAAA,MAAoD,WAAA,EAAa,UAAjE;KAAjB,EACE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,OAAA,EAAS,MAAV;AAAA,MAAkB,OAAA,EAAS,MAA3B;KAAjB,CADF,EAEE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,OAAA,EAAS,QAAV;AAAA,MAAoB,OAAA,EAAS,QAA7B;KAAjB,CAFF,EAGE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,OAAA,EAAS,OAAV;AAAA,MAAmB,OAAA,EAAS,OAA5B;KAAjB,CAHF,EAIE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,OAAA,EAAS,SAAV;AAAA,MAAqB,OAAA,EAAS,SAA9B;KAAjB,CAJF,CALF,CAVF,EAsBE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,WAAA,EAAa,iBAAd;KAAf,EACE,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe;AAAA,MAAC,OAAA,EAAS,MAAV;AAAA,MAAkB,WAAA,EAAa,0BAA/B;KAAf,CADF,CAtBF,CADF,EA2BE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,WAAd;AAAA,MAA2B,KAAA,EAAO,QAAlC;KAAd,CA3BF,EA4BE,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,WAAd;AAAA,MAA2B,KAAA,EAAO,QAAlC;KAAd,EACE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,WAAA,EAAa,kBAAd;AAAA,MAAkC,SAAA,EAAY,IAAC,CAAA,YAA/C;KAAjB,EAAgF,QAAhF,CADF,EAEE,KAAK,CAAC,GAAG,CAAC,MAAV,CAAiB;AAAA,MAAC,WAAA,EAAa,gBAAd;AAAA,MAAgC,SAAA,EAAY,IAAC,CAAA,UAA7C;KAAjB,EAA4E,MAA5E,CAFF,CA5BF,CADF,EADM;EAAA,CA1CR;CADO,CAhCT,CAAA;;AAAA,OAgHA,GAAU,KAAK,CAAC,WAAN,CACR;AAAA,EAAA,WAAA,EAAa,kBAAb;AAAA,EACA,SAAA,EACE;AAAA,IAAA,OAAA,EAAS,KAAK,CAAC,SAAS,CAAC,MAAzB;GAFF;AAAA,EAIA,eAAA,EAAiB,SAAA,GAAA;WACf;AAAA,MAAA,IAAA,EAAM,MAAN;MADe;EAAA,CAJjB;AAAA,EAOA,aAAA,EAAe,SAAA,GAAA;AACb,IAAA,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,IAAA,EAAM,MAAN;KADF,CAAA,CAAA;WAEA,IAAC,CAAA,IAAI,CAAC,MAAM,CAAC,KAAb,CAAA,EAHa;EAAA,CAPf;AAAA,EAYA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,IAAA,EAAM,MAAN;KADF,EADY;EAAA,CAZd;AAAA,EAgBA,aAAA,EAAe,SAAC,OAAD,GAAA;AACb,IAAA,IAAC,CAAA,QAAD,CACE;AAAA,MAAA,IAAA,EAAM,MAAN;KADF,CAAA,CAAA;WAEA,IAAC,CAAA,KAAK,CAAC,aAAP,CAAqB,OAArB,EAHa;EAAA,CAhBf;AAAA,EAqBA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,mBAAA;AAAA,IAAA,UAAA,GAAa,4BAAA,IAAoB,IAAC,CAAA,KAAK,CAAC,OAAP,KAAoB,EAArD,CAAA;AAAA,IACA,OAAA,GAAU,KAAK,CAAC,MAAM,CAAC,QAAb,CACR;AAAA,MAAA,mBAAA,EAAqB,IAArB;AAAA,MACA,WAAA,EAAa,IAAC,CAAA,KAAK,CAAC,IAAP,KAAe,MAD5B;AAAA,MAEA,WAAA,EAAa,IAAC,CAAA,KAAK,CAAC,IAAP,KAAe,MAAf,IAA0B,UAFvC;AAAA,MAGA,aAAA,EAAe,IAAC,CAAA,KAAK,CAAC,IAAP,KAAe,MAAf,IAA0B,CAAA,UAHzC;KADQ,CADV,CAAA;WAMA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAc,OAAf;KAAd,EACE,MAAA,CAAO;AAAA,MACL,KAAA,EAAO,QADF;AAAA,MAEL,SAAA,EAAY,IAAC,CAAA,KAAK,CAAC,OAFd;AAAA,MAGL,cAAA,EAAiB,IAAC,CAAA,YAHb;AAAA,MAIL,eAAA,EAAkB,IAAC,CAAA,aAJd;KAAP,CADF,EAOE,MAAA,CAAO;AAAA,MACL,SAAA,EAAY,IAAC,CAAA,KAAK,CAAC,OADd;AAAA,MAEL,YAAA,EAAe,IAAC,CAAA,KAAK,CAAC,UAFjB;AAAA,MAGL,aAAA,EAAgB,IAAC,CAAA,KAAK,CAAC,WAHlB;AAAA,MAIL,eAAA,EAAkB,IAAC,CAAA,aAJd;KAAP,CAPF,EAPM;EAAA,CArBR;CADQ,CAhHV,CAAA;;AAAA,MA4JM,CAAC,OAAP,GAAiB,OA5JjB,CAAA;;;;ACAA,IAAA,kDAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,MAGA,GAAS,OAAA,CAAQ,iBAAR,CAHT,CAAA;;AAAA,OAIA,GAAU,OAAA,CAAQ,WAAR,CAJV,CAAA;;AAAA,MAKA,GAAS,OAAA,CAAQ,iBAAR,CALT,CAAA;;AAAA,QAMA,GAAW,OAAA,CAAQ,aAAR,CANX,CAAA;;AAAA,QAQA,GAAW,KAAK,CAAC,WAAN,CACT;AAAA,EAAA,WAAA,EAAa,UAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,iBAAA,EAAmB,SAAA,GAAA;WACjB;AAAA,MAAA,OAAA,EAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,YAAjB,CAAT;AAAA,MACA,KAAA,EAAO,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,OAAjB,CADP;MADiB;EAAA,CALnB;AAAA,EASA,eAAA,EAAiB,SAAA,GAAA;WACf,IAAC,CAAA,iBAAD,CAAA,EADe;EAAA,CATjB;AAAA,EAYA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CAAU,IAAC,CAAA,iBAAD,CAAA,CAAV,EADY;EAAA,CAZd;AAAA,EAeA,iBAAA,EAAmB,SAAA,GAAA;AACjB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,EAAb,CAAgB,QAAhB,EAA0B,IAAC,CAAA,YAA3B,EAAyC,IAAzC,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,EAAb,CAAgB,mBAAhB,EAAqC,IAAC,CAAA,YAAtC,EAAoD,IAApD,EAFiB;EAAA,CAfnB;AAAA,EAmBA,oBAAA,EAAsB,SAAA,GAAA;AACpB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,EAA2B,IAAC,CAAA,YAA5B,EAA0C,IAA1C,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,mBAAjB,EAAsC,IAAC,CAAA,YAAvC,EAAqD,IAArD,EAFoB;EAAA,CAnBtB;AAAA,EAuBA,gBAAA,EAAkB,SAAC,OAAD,GAAA;AAChB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB;AAAA,MAAC,UAAA,EAAY,OAAb;KAAjB,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IAAb,CAAA,EAFgB;EAAA,CAvBlB;AAAA,EA2BA,SAAA,EAAW,SAAA,GAAA;WACT,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,MAAb,CAAoB,EAApB,EAAwB;AAAA,MAAA,IAAA,EAAM,IAAN;KAAxB,EADS;EAAA,CA3BX;AAAA,EA8BA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,OAAA;AAAA,IAAA,OAAA,GAAU,IAAC,CAAA,KAAK,CAAC,OAAjB,CAAA;WACA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,+BAAd;KAAd,EACE,OAAA,CAAQ;AAAA,MACN,YAAA,EAAc,8DADR;AAAA,MAEN,aAAA,EAAe,mEAFT;AAAA,MAGN,SAAA,EAAY,OAHN;AAAA,MAIN,eAAA,EAAkB,IAAC,CAAA,gBAJb;KAAR,CADF,EAOE,QAAA,CAAS;AAAA,MACP,YAAA,EAAe,IAAC,CAAA,KAAK,CAAC,KADf;KAAT,CAPF,EAUE,MAAA,CAAO;AAAA,MAAC,OAAA,EAAS,UAAV;KAAP,EACE,MAAA,CAAO;AAAA,MACL,aAAA,EAAe,gBADV;AAAA,MAEL,YAAA,EAAc,UAFT;AAAA,MAGL,YAAA,EAAc,SAHT;AAAA,MAIL,UAAA,EAAa,IAAC,CAAA,SAJT;KAAP,CADF,CAVF,EAFM;EAAA,CA9BR;CADS,CARX,CAAA;;AAAA,MA6DM,CAAC,OAAP,GAAiB,QA7DjB,CAAA;;;;ACAA,IAAA,kDAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,MAGA,GAAS,OAAA,CAAQ,iBAAR,CAHT,CAAA;;AAAA,OAIA,GAAU,OAAA,CAAQ,WAAR,CAJV,CAAA;;AAAA,MAKA,GAAS,OAAA,CAAQ,iBAAR,CALT,CAAA;;AAAA,YAMA,GAAe,OAAA,CAAQ,iBAAR,CANf,CAAA;;AAAA,IAQA,GAAO,KAAK,CAAC,WAAN,CACL;AAAA,EAAA,WAAA,EAAa,MAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,iBAAA,EAAmB,SAAA,GAAA;WACjB;AAAA,MAAA,OAAA,EAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,YAAjB,CAAT;AAAA,MACA,SAAA,EAAW,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,WAAjB,CADX;MADiB;EAAA,CALnB;AAAA,EASA,eAAA,EAAiB,SAAA,GAAA;WACf,IAAC,CAAA,iBAAD,CAAA,EADe;EAAA,CATjB;AAAA,EAYA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CAAU,IAAC,CAAA,iBAAD,CAAA,CAAV,EADY;EAAA,CAZd;AAAA,EAeA,iBAAA,EAAmB,SAAA,GAAA;AACjB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,EAAb,CAAgB,QAAhB,EAA0B,IAAC,CAAA,YAA3B,EAAyC,IAAzC,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,SAAS,CAAC,EAAjB,CAAoB,mBAApB,EAAyC,IAAC,CAAA,YAA1C,EAAwD,IAAxD,EAFiB;EAAA,CAfnB;AAAA,EAmBA,oBAAA,EAAsB,SAAA,GAAA;AACpB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,EAA2B,IAAC,CAAA,YAA5B,EAA0C,IAA1C,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,SAAS,CAAC,GAAjB,CAAqB,mBAArB,EAA0C,IAAC,CAAA,YAA3C,EAAyD,IAAzD,EAFoB;EAAA,CAnBtB;AAAA,EAuBA,gBAAA,EAAkB,SAAC,OAAD,GAAA;AAChB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB;AAAA,MAAC,UAAA,EAAY,OAAb;KAAjB,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IAAb,CAAA,EAFgB;EAAA,CAvBlB;AAAA,EA2BA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,MAAC,IAAA,EAAM,IAAP;KAArB,EADY;EAAA,CA3Bd;AAAA,EA8BA,aAAA,EAAe,SAAA,GAAA;WACb,IAAC,CAAA,KAAK,CAAC,SAAS,CAAC,MAAjB,CAAwB,EAAxB,EAA4B;AAAA,MAAA,IAAA,EAAM,IAAN;KAA5B,EADa;EAAA,CA9Bf;AAAA,EAiCA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,6BAAA;AAAA,IAAA,OAAA,GAAU,IAAC,CAAA,KAAK,CAAC,OAAjB,CAAA;AAAA,IACA,SAAA,GAAY,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,OAAxB,CAAgC,IAAC,CAAA,KAAK,CAAC,KAAvC,CAAA,GAAgD,CAD5D,CAAA;AAAA,IAEA,SAAA,GAAa,OAAA,GAAM,SAFnB,CAAA;WAGA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa;AAAA,MAAC,WAAA,EAAa,2BAAd;KAAb,EACE,OAAA,CAAQ;AAAA,MACN,YAAA,EAAc,oDADR;AAAA,MAEN,aAAA,EAAe,yDAFT;AAAA,MAGN,SAAA,EAAY,OAHN;AAAA,MAIN,eAAA,EAAkB,IAAC,CAAA,gBAJb;KAAR,CADF,EAOE,YAAA,CAAa;AAAA,MACX,YAAA,EAAe,IAAC,CAAA,KAAK,CAAC,SADX;KAAb,CAPF,EAUE,MAAA,CAAO;AAAA,MAAC,OAAA,EAAU,SAAX;KAAP,EACE,MAAA,CAAO;AAAA,MACL,aAAA,EAAe,oBADV;AAAA,MAEL,YAAA,EAAc,cAFT;AAAA,MAGL,YAAA,EAAc,aAHT;AAAA,MAIL,UAAA,EAAa,IAAC,CAAA,aAJT;KAAP,CADF,EAOE,MAAA,CAAO;AAAA,MACL,aAAA,EAAe,kBADV;AAAA,MAEL,YAAA,EAAc,aAFT;AAAA,MAGL,YAAA,EAAc,YAHT;AAAA,MAIL,UAAA,EAAa,IAAC,CAAA,YAJT;KAAP,CAPF,CAVF,EAJM;EAAA,CAjCR;CADK,CARP,CAAA;;AAAA,MAwEM,CAAC,OAAP,GAAiB,IAxEjB,CAAA;;;;ACAA,IAAA,qBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,IAGA,GAAO,OAAA,CAAQ,QAAR,CAHP,CAAA;;AAAA,QAKA,GAAW,KAAK,CAAC,WAAN,CACT;AAAA,EAAA,WAAA,EAAa,UAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,UAAA,EAAY,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAnC;GAHF;AAAA,EAKA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,cAAA;AAAA,IAAA,KAAA,GAAQ,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,GAAlB,CAAsB,SAAC,KAAD,GAAA;aAC5B,IAAA,CAAK;AAAA,QAAC,KAAA,EAAQ,KAAK,CAAC,EAAf;AAAA,QAAoB,OAAA,EAAU,KAA9B;OAAL,EAD4B;IAAA,CAAtB,CAAR,CAAA;AAAA,IAEA,OAAA,GAAU,KAAK,CAAC,MAAM,CAAC,QAAb,CACR;AAAA,MAAA,QAAA,EAAW,KAAK,CAAC,MAAN,GAAe,CAA1B;KADQ,CAFV,CAAA;WAIA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa;AAAA,MAAC,WAAA,EAAc,OAAf;KAAb,EACG,KADH,EALM;EAAA,CALR;CADS,CALX,CAAA;;AAAA,MAoBM,CAAC,OAAP,GAAiB,QApBjB,CAAA;;;;ACAA,IAAA,oDAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,MAGA,GAAS,OAAA,CAAQ,iBAAR,CAHT,CAAA;;AAAA,UAIA,GAAa,OAAA,CAAQ,eAAR,CAJb,CAAA;;AAAA,OAKA,GAAU,OAAA,CAAQ,WAAR,CALV,CAAA;;AAAA,MAMA,GAAS,OAAA,CAAQ,iBAAR,CANT,CAAA;;AAAA,QAQA,GAAW,KAAK,CAAC,WAAN,CACT;AAAA,EAAA,WAAA,EAAa,UAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,KAAA,EAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAA9B;GAHF;AAAA,EAKA,iBAAA,EAAmB,SAAA,GAAA;WACjB;AAAA,MAAA,OAAA,EAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,MAAjB,CAAT;AAAA,MACA,OAAA,EAAS,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,SAAjB,CADT;MADiB;EAAA,CALnB;AAAA,EASA,eAAA,EAAiB,SAAA,GAAA;WACf,IAAC,CAAA,iBAAD,CAAA,EADe;EAAA,CATjB;AAAA,EAYA,YAAA,EAAc,SAAA,GAAA;WACZ,IAAC,CAAA,QAAD,CAAU,IAAC,CAAA,iBAAD,CAAA,CAAV,EADY;EAAA,CAZd;AAAA,EAeA,iBAAA,EAAmB,SAAA,GAAA;AACjB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,EAAb,CAAgB,QAAhB,EAA0B,IAAC,CAAA,YAA3B,EAAyC,IAAzC,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,EAAf,CAAkB,mBAAlB,EAAuC,IAAC,CAAA,YAAxC,EAAsD,IAAtD,EAFiB;EAAA,CAfnB;AAAA,EAmBA,oBAAA,EAAsB,SAAA,GAAA;AACpB,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB,QAAjB,EAA2B,IAAC,CAAA,YAA5B,EAA0C,IAA1C,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,GAAf,CAAmB,mBAAnB,EAAwC,IAAC,CAAA,YAAzC,EAAuD,IAAvD,EAFoB;EAAA,CAnBtB;AAAA,EAuBA,UAAA,EAAY,SAAC,OAAD,GAAA;AACV,IAAA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,GAAb,CAAiB;AAAA,MAAC,IAAA,EAAM,OAAP;KAAjB,CAAA,CAAA;WACA,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,IAAb,CAAA,EAFU;EAAA,CAvBZ;AAAA,EA2BA,gBAAA,EAAkB,SAAA,GAAA;WAChB,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,MAAC,IAAA,EAAM,IAAP;KAArB,EADgB;EAAA,CA3BlB;AAAA,EA8BA,WAAA,EAAa,SAAC,UAAD,GAAA;WACX,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MAAf,CAAsB;AAAA,MAAC,IAAA,EAAM,UAAP;KAAtB,EAA0C;AAAA,MAAA,IAAA,EAAM,IAAN;KAA1C,EADW;EAAA,CA9Bb;AAAA,EAiCA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,qCAAA;AAAA,IAAA,OAAA,GAAU,IAAC,CAAA,KAAK,CAAC,OAAjB,CAAA;AAAA,IACA,aAAA,GAAgB,IAAC,CAAA,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,OAAxB,CAAgC,IAAC,CAAA,KAAK,CAAC,KAAvC,CAAA,GAAgD,CADhE,CAAA;AAAA,IAEA,aAAA,GAAiB,WAAA,GAAU,aAF3B,CAAA;WAGA,KAAK,CAAC,GAAG,CAAC,GAAV,CAAc;AAAA,MAAC,WAAA,EAAa,+BAAd;KAAd,EACE,OAAA,CAAQ;AAAA,MACN,YAAA,EAAc,iCADR;AAAA,MAEN,aAAA,EAAe,kCAFT;AAAA,MAGN,SAAA,EAAY,OAHN;AAAA,MAIN,eAAA,EAAkB,IAAC,CAAA,UAJb;KAAR,CADF,EAOE,UAAA,CAAW;AAAA,MAAC,YAAA,EAAe,IAAC,CAAA,KAAK,CAAC,OAAvB;KAAX,CAPF,EAQE,MAAA,CAAO;AAAA,MAAC,OAAA,EAAU,aAAX;KAAP,EACE,MAAA,CAAO;AAAA,MACL,QAAA,EAAU,KADL;AAAA,MAEL,aAAA,EAAe,kBAFV;AAAA,MAGL,YAAA,EAAc,YAHT;AAAA,MAIL,YAAA,EAAc,QAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,WALT;KAAP,CADF,EAQE,MAAA,CAAO;AAAA,MACL,QAAA,EAAW,CAAA,IAAK,CAAA,KAAK,CAAC,KAAK,CAAC,WAAb,CAAA,CADV;AAAA,MAEL,aAAA,EAAe,wBAFV;AAAA,MAGL,YAAA,EAAc,wBAHT;AAAA,MAIL,YAAA,EAAc,OAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,WALT;KAAP,CARF,EAeE,MAAA,CAAO;AAAA,MACL,QAAA,EAAW,CAAA,IAAK,CAAA,KAAK,CAAC,KAAK,CAAC,SAAb,CAAA,CADV;AAAA,MAEL,aAAA,EAAe,kBAFV;AAAA,MAGL,YAAA,EAAc,+BAHT;AAAA,MAIL,YAAA,EAAc,KAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,WALT;KAAP,CAfF,EAsBE,MAAA,CAAO;AAAA,MACL,QAAA,EAAW,CAAA,IAAK,CAAA,KAAK,CAAC,KAAK,CAAC,UAAb,CAAA,CADV;AAAA,MAEL,aAAA,EAAe,kBAFV;AAAA,MAGL,YAAA,EAAc,gCAHT;AAAA,MAIL,YAAA,EAAc,MAJT;AAAA,MAKL,UAAA,EAAa,IAAC,CAAA,WALT;KAAP,CAtBF,EA6BE,MAAA,CAAO;AAAA,MACL,aAAA,EAAe,sBADV;AAAA,MAEL,YAAA,EAAc,iBAFT;AAAA,MAGL,YAAA,EAAc,gBAHT;AAAA,MAIL,UAAA,EAAa,IAAC,CAAA,gBAJT;KAAP,CA7BF,CARF,EAJM;EAAA,CAjCR;CADS,CARX,CAAA;;AAAA,MA4FM,CAAC,OAAP,GAAiB,QA5FjB,CAAA;;;;ACAA,IAAA,6BAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAR,CAAA;;AAAA,KACK,CAAC,MAAN,GAAe,OAAA,CAAQ,cAAR,CADf,CAAA;;AAAA,QAGA,GAAW,OAAA,CAAQ,YAAR,CAHX,CAAA;;AAAA,YAKA,GAAe,KAAK,CAAC,WAAN,CACb;AAAA,EAAA,WAAA,EAAa,cAAb;AAAA,EAEA,SAAA,EACE;AAAA,IAAA,UAAA,EAAY,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAnC;GAHF;AAAA,EAKA,MAAA,EAAQ,SAAA,GAAA;AACN,QAAA,SAAA;AAAA,IAAA,SAAA,GAAY,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,GAAlB,CAAsB,SAAC,KAAD,GAAA;aAChC,QAAA,CAAS;AAAA,QAAC,KAAA,EAAQ,KAAK,CAAC,EAAf;AAAA,QAAoB,OAAA,EAAU,KAA9B;OAAT,EADgC;IAAA,CAAtB,CAAZ,CAAA;WAEA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAa,IAAb,EACG,SADH,EAHM;EAAA,CALR;CADa,CALf,CAAA;;AAAA,MAkBM,CAAC,OAAP,GAAiB,YAlBjB,CAAA",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\n\nclass AssociatedCollection extends Backbone.Collection\n  owner: () ->\n    if @parents? and @parents[0]? then return @parents[0]\n\n  resourceName: () ->\n    @constructor.name.toLowerCase()\n\n  url: () ->\n    owner = @owner()\n    if owner then return \"#{owner.url()}/#{@resourceName()}\"\n\nmodule.exports = AssociatedCollection\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\n_ = require 'underscore'\n\nclass Choice extends Backbone.AssociatedModel\n\n  question: () ->\n    @collection.owner()\n\n  position: () ->\n    @get('position')\n\n  letter: () ->\n    String.fromCharCode(97 + @position())\n\n  canMoveUp: () ->\n    @type() is 'simple' and @position() > 0\n\n  canMoveDown: () ->\n    isBottom = () =>\n      @position() is @collection.length - 1\n    isLastSimpleChoice = () =>\n      @collection.at(@position() + 1).type() isnt 'simple'\n    @type() is 'simple' and not (isBottom() or isLastSimpleChoice())\n\n  type: () ->\n    @get('type')\n\n  weight: () ->\n    switch @type()\n      when 'simple' then -100 + @position()\n      when 'all'  then 500\n      when 'none' then 10000\n      else @get('combos').length\n\n  compare: (other) ->\n    leftWins = -1\n    rightWins = 1\n    tied = 0\n\n    simple_compare = (l, r) ->\n      switch\n        when l is r then tied\n        when l < r then leftWins\n        else rightWins\n\n    result = simple_compare @weight(), other.weight()\n    if result is tied and @type() is other.type() is 'combo'\n      res = _.find(\n              _.zip(@combos(), other.combos()),\n                ([l, r]) -> l.compare(r) isnt tied)\n      result = if res then res[0].compare(res[1]) else tied\n    result\n\n  setSelections: (ids) ->\n    if @type() is 'combo'\n      # TODO: Validate ids.\n      @set({'combos': ids})\n\n  selections: () ->\n    if @type() is 'combo'\n      simples = @collection.filter (c) => c.type() is 'simple'\n      combos = @get('combos')\n      selected = (simple) ->\n        _.contains(combos, simple.get('id'))\n      statuses = {}\n      ([simple, selected(simple)] for simple in simples)\n\n  combos: () ->\n    if @type() is 'combo'\n      selections = @get('combos').map (csc) =>\n        @collection.get(csc)\n      _.sortBy selections, (sc) -> sc.position()\n\n  moveUp: () ->\n    if @canMoveUp()\n       idx = @position()\n      @collection.move idx, idx-1\n\n  moveDown: () ->\n    if @canMoveDown()\n       idx = @position()\n      @collection.move idx, idx+1\n\nmodule.exports = Choice\n",
    "Backbone = require 'backbone'\nAssociatedCollection = require './associated_collection.js.coffee'\nChoice = require './choice.js.coffee'\n$ = require 'jquery'\n_ = require 'underscore'\n\nclass Choices extends AssociatedCollection\n  model: Choice\n\n  positionField: 'position'\n\n  initialize: () ->\n    @listenTo this, 'add remove sort', @setPositionsFromIndex\n    @listenTo this, 'change:combos', () => @sort()\n\n  comparator: (left, right) ->\n    left.compare(right)\n\n  savePositions: (options={}) ->\n    if @models.length == 0 then return\n\n    _.defaults(\n      options,\n      {\n        attrs:\n          order: _.map (@filter (model) -> model.hasChanged), (model) -> {id: model.get('id'), position: model.get(@positionField)}\n      })\n    @sync 'update', this, options\n\n  setPositionsFromIndex: () ->\n    @each (model, index) => model.set(@positionField, index)\n\n  simples: () ->\n    @filter (c) -> c.type() is 'simple'\n\n  move: (from, to) ->\n    if from instanceof Backbone.Model then from = from.get(@positionField)\n    @models.splice(to, 0, @models.splice(from, 1)[0]);\n    @setPositionsFromIndex()\n    @sort()\n    @savePositions\n      error: () =>\n        # TODO Should save original positions above and have this error function\n        # put the models back in that order.  Maybe can use Model#previousAttributes?\n        alert 'sort order could not be saved, please reload this page'\n\n\nmodule.exports = Choices\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nPart = require './part.js.coffee'\nParts = require './parts.js.coffee'\n\nclass Exercise extends Backbone.AssociatedModel\n\n  urlRoot: '/api/exercises'\n\n  relations: [\n    {\n      type: Backbone.Many\n      key: 'parts'\n      relatedModel: Part\n      collectionType: Parts\n    }\n  ]\n\n  defaults:\n    number: ''\n\nmodule.exports = Exercise\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nQuestions = require './questions.js.coffee'\n\nclass Part extends Backbone.AssociatedModel\n\n  defaults:\n    position: -1,\n    credit: -1\n\n  relations: [\n    {\n      type: Backbone.Many,\n      key: 'questions',\n      collectionType: Questions,\n    }\n  ]\n\nmodule.exports = Part\n",
    "AssociatedCollection = require './associated_collection.js.coffee'\nPart = require './part.js.coffee'\n\nclass Parts extends AssociatedCollection\n  model: Part\n\nmodule.exports = Parts\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nChoices = require './choices.js.coffee'\n_ = require 'underscore'\n\nclass Question extends Backbone.AssociatedModel\n\n  defaults:\n    type: 'multiple_choice_question'\n\n  counts: () ->\n    counts = @get('choices').countBy('type')\n    _.extend {}, {all: 0, none: 0, simple: 0, combo: 0}, counts\n\n  canAddCombo: () ->\n    counts = @counts()\n    n = counts.simple\n    n >= 2 and counts.combo < (2 ** n - (n + 1))\n\n  canAddAll: () ->\n    counts = @counts()\n    counts.all is 0 and counts.simple >= 2\n\n  canAddNone: () ->\n    counts = @counts()\n    counts.simple > 1 and counts.none is 0\n\n  relations: [\n    {\n      type: Backbone.Many,\n      key: 'choices',\n      collectionType: Choices\n    }\n  ]\n\nmodule.exports = Question\n",
    "AssociatedCollection = require './associated_collection.js.coffee'\nQuestion = require './question.js.coffee'\n\nclass Questions extends AssociatedCollection\n  model: Question\n\n\nmodule.exports = Questions\n",
    "var fauxServer = require(\"./../../../../../bower_components/backbone-faux-server/backbone-faux-server.js\");\nvar _ = require(\"./../../../../../bower_components/underscore/underscore.js\");\n\n// The deathmatch namespace.\nvar deathMatch = deathMatch || {};\n\ndeathMatch.stub = function() {\n    var self = this;\n\n    function updateAttributes(from, to, atts) {\n        _.each(atts, function(att) {\n            var res = _.result(from, att);\n            if (res) {\n                to[att] = res;\n            }\n        });\n    };\n\n    self.maxIds = {\n        exercise: 1,\n        part: 0,\n        question: 0,\n        choice: 0\n    };\n\n    self.exercise = {\n        background: \"\",\n        parts: []\n    };\n\n    self.find = function(coll, id) {\n        id = parseInt(id);\n        return _.findWhere(coll, {\n            id: id\n        });\n    };\n\n    self.findPart = function(exerciseId, partId) {\n        return self.find(exercise.parts, partId);\n    };\n\n    self.findQuestion = function(exerciseId, partId, questionId) {\n        var part = self.findPart(exerciseId, partId);\n        return self.find(part.questions, questionId);\n    };\n\n    self.findChoice = function(exerciseId, partId, questionId, choiceId) {\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        return self.find(question.choices, choiceId);\n    };\n\n    self.update = function(exerciseId, data) {\n        self.exercise.background = data.background;\n        return self.exercise;\n    };\n\n    self.addPart = function(exerciseId, data) {\n        self.maxIds.part += 1;\n        data.id = self.maxIds.part;\n        data.background = \"\";\n        data.position = self.exercise.parts.length;\n        data.questions = [];\n        self.exercise.parts.push(data);\n        return data;\n    };\n\n    self.updatePart = function(exerciseId, partId, data) {\n        var part = self.findPart(exerciseId, partId);\n        updateAttributes(data, part, ['background', 'questions']);\n        return part;\n    };\n\n    self.removePart = function(exerciseId, partId) {\n        var parts = self.exercise.parts;\n        var part = self.findPart(exerciseId, partId);\n        var index = parts.indexOf(part);\n        if (index >= 0) {\n            parts.splice(index, 1);\n        }\n        return {\n            success: true\n        };\n    };\n\n    self.addQuestion = function(exerciseId, partId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        self.maxIds.question += 1;\n        data.id = self.maxIds.question;\n        data.position = questions.length;\n        data.stem = \"\";\n        data.choices = [];\n        questions.push(data);\n        return data;\n    };\n\n    self.updateQuestion = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        updateAttributes(data, question, ['stem', 'choices']);\n        return question;\n    };\n\n    self.removeQuestion = function(exerciseId, partId, questionId) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var index = questions.indexOf(question);\n        if (index >= 0) {\n            questions.splice(index, 1);\n        }\n        return {\n            success: true\n        };\n    };\n\n    self.updateChoices = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        if (data.order) {\n            _.each(choices, function(choice) {\n                choice.position = data.order[choice.id];\n            });\n            return {\n                success: true\n            };\n        } else {\n            return {\n                success: false\n            };\n        }\n    };\n\n    self.addChoice = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        self.maxIds.choice += 1;\n        data.id = self.maxIds.choice;\n        data.position = choices.length;\n        data.content = \"\";\n        data.combos = [];\n        choices.push(data);\n        return data;\n    };\n\n    self.updateChoice = function(exerciseId, partId, questionId, choiceId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        var choice = self.findChoice(exerciseId, partId, questionId, choiceId);\n        updateAttributes(data, choice, ['position', 'content', 'combos']);\n        return choice;\n    };\n\n    self.removeChoice = function(exerciseId, partId, questionId, choiceId) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        var choice = self.findChoice(exerciseId, partId, questionId, choiceId);\n        var index = choices.indexOf(choice);\n        if (index >= 0) {\n            choices.splice(index, 1);\n        }\n        return {\n            succes: true\n        };\n    };\n\n    return {\n        exercise: {\n            parts: self.exercise.parts,\n            update: self.update,\n            addPart: self.addPart,\n            updatePart: self.updatePart,\n            removePart: self.removePart,\n            addQuestion: self.addQuestion,\n            updateQuestion: self.updateQuestion,\n            removeQuestion: self.removeQuestion,\n            addChoice: self.addChoice,\n            updateChoice: self.updateChoice,\n            updateChoices: self.updateChoices,\n            removeChoice: self.removeChoice\n        }\n    };\n};\n\nvar exercise = deathMatch.stub().exercise;\n\nfauxServer\n    .put(\"/api/exercises/:exerciseId\",\n        function(context, exerciseId) {\n            return exercise.update(exerciseId, context.data);\n        })\n    .post(\"/api/exercises/:exerciseId/parts\",\n        function(context, exerciseId) {\n            return exercise.addPart(exerciseId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId\",\n        function(context, exerciseId, partId) {\n            return exercise.updatePart(exerciseId, partId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId\",\n        function(context, exerciseId, partId) {\n            return exercise.removePart(exerciseId, partId);\n        })\n    .post(\"/api/exercises/:exerciseId/parts/:partId/questions\",\n        function(context, exerciseId, partId) {\n            return exercise.addQuestion(exerciseId, partId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.updateQuestion(exerciseId, partId, questionId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.removeQuestion(exerciseId, partId, questionId);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.updateChoices(exerciseId, partId, questionId, context.data);\n        })\n    .post(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.addChoice(exerciseId, partId, questionId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices/:choiceId\",\n        function(context, exerciseId, partId, questionId, choiceId) {\n            return exercise.updateChoice(exerciseId, partId, questionId, choiceId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices/:choiceId\",\n        function(context, exerciseId, partId, questionId, choiceId) {\n            return exercise.removeChoice(exerciseId, partId, questionId, choiceId);\n        });\n\nfauxServer.enable();\n",
    "\n\nReact = require 'react'\n\nExercise = require './components/exercise'\nExerciseModel = require '../../../common/assets/js/entities/exercise.js.coffee'\nrequire '../../../common/assets/js/stubs/api.js'\n\nexercise = new ExerciseModel\n  id: 1\n  parts: []\n\nReact.renderComponent Exercise({\"model\": (exercise)}),\n  document.getElementById 'exercise-editor'\n",
    "\n\nReact = require 'react'\nReact.Addons = require 'react-addons'\n\nActionButton = React.createClass\n\n  getDefaultProps: () ->\n    hidden: false\n    actionText: \"\"\n    buttonMainClass: \"action\"\n    buttonTypeClass: \"secondary\"\n    extraButtonClasses: []\n\n  propTypes:\n    hidden: React.PropTypes.bool\n    onAction: React.PropTypes.func.isRequired\n    actionName: React.PropTypes.string.isRequired\n    actionText: React.PropTypes.string.isRequired\n    actionTitle: React.PropTypes.string\n\n  handleAction: () ->\n    @props.onAction(@props.actionName)\n\n  render: () ->\n    classes = hidden: @props.hidden\n    classes[@props.buttonMainClass] = true\n    classes[@props.buttonTypeClass] = true\n\n    for className in @props.extraButtonClasses\n      classes[className] = true\n    classes = React.Addons.classSet classes\n    React.DOM.button({\"className\": (classes),  \\\n      \"title\": (@props.actionTitle),  \\\n      \"name\": (@props.actionName),  \\\n      \"onClick\": (@handleAction)}, (@props.actionText))\n\nmodule.exports = ActionButton\n",
    "\n\nReact = require 'react'\n\nActionDrawer = React.createClass\n\n  render: () ->\n    React.DOM.div({\"className\": \"action-panel drawer\"}, \n      React.DOM.h4(null, (@props.title)), \n      (@props.children)\n    )\n\nmodule.exports = ActionDrawer\n",
    "\n\nReact = require 'react'\nReact.addons = require 'react-addons'\n_ = require('underscore')\n\nButton = require './action_button'\nContent = require './content'\nDrawer = require './action_drawer'\n\nComboChoiceViewer = React.createClass\n  displayName: 'ComboChoiceViewer'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getDefaultProps: () ->\n    onEditComboChoice: () -> debugger\n\n  handleEdit: () ->\n    @props.onEditComboChoice()\n\n  render: () ->\n    combos = @props.model.combos()\n    choiceText =\n      if combos.length > 1\n        txt = _.map(_.initial(combos), (c) -> \"(#{c.letter()})\").join ', '\n        txt += ' & '\n        txt += \"(#{_.last(combos).letter()})\"\n        txt\n      else\n        \"Invalid selections. Please edit to fix.\"\n\n    React.DOM.div({\"className\": \"combo-choice-viewer viewer-container hoverable\", \"onClick\": (@handleEdit)}, \n      React.DOM.button({\"className\": \"action secondary on-hover\",  \\\n              \"title\": \"Edit combo choice\",  \\\n              \"onClick\": (@handleEdit)}, \"\"\"\n        Edit\n\"\"\"), \n      React.DOM.div({\"className\": \"viewer\"}, \n        (choiceText)\n      )\n    )\n\nComboChoiceEditor = React.createClass\n  displayName: 'ComboChoiceEditor'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getInitialState: () ->\n    selections: @props.model.get('combos')\n\n  getDefaultProps: () ->\n    onCancelEdit: () -> debugger\n    onSaveChanges: () -> debugger\n\n  handleChange: () ->\n    inputs = @refs.editor.getDOMNode().getElementsByTagName 'input'\n    selections = (parseInt(input.value) for input in inputs when input.checked is true)\n    @setState\n      selections: selections\n\n  handleClick: (event) ->\n    event.currentTarget.getElementsByTagName('input')[0].checked = true;\n\n  handleSave: () ->\n    @props.model.setSelections @state.selections\n    @props.model.save\n    @props.onSaveChanges()\n    false\n\n  handleCancel: () ->\n    @props.onCancelEdit()\n    false\n\n  render: () ->\n    selections = @state.selections\n    renderCheckbox = (choice) =>\n      React.DOM.div({\"className\": 'choice-selector-container', \"onClick\": (@handleClick)}, \n        React.DOM.input({\"type\": 'checkbox',  \\\n               \"onChange\": (@handleChange),  \\\n               \"value\": (choice.get('id')),  \\\n               \"checked\": (choice.id in selections)\n        }), \n        React.DOM.div({\"className\": \"choice-letter\"}, \"(\", (choice.letter()), \")\"), \n        React.DOM.div({\"className\": \"choice-content\", \"dangerouslySetInnerHTML\": (__html: choice.get('content'))})\n      )\n    inputs = (renderCheckbox choice for choice in @props.model.collection.simples())\n    React.DOM.div({\"className\": \"combo-choice-editor editor\", \"ref\": 'editor'}, \n      React.DOM.form({\"className\": \"combo-choice-editor-form form\", \"onSubmit\": (@handleSave)}, \n        (inputs), \n        React.DOM.div({\"className\": \"footer button-panel\"}, \n          React.DOM.button({\"className\": \"action secondary\", \"title\": \"Cancel editing\", \"onClick\": (@handleCancel)}, \"\"\"\n            Cancel\n\"\"\"), \n          React.DOM.button({\"type\": \"submit\", \"className\": \"action primary\", \"title\": \"Done editing\"}, \"\"\"\n            Done\n\"\"\")\n        )\n      )\n    )\n\nComboChoice = React.createClass\n  displayName: 'ComboChoice'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getInitialState: () ->\n    combos = @props.model.get('combos')\n    mode = if combos? and combos.length > 1 then 'view' else 'edit'\n    mode: mode\n\n  onEdit: () ->\n    @setState\n      mode: 'edit'\n\n  onCancelEdit: () ->\n    @setState\n      mode: 'view'\n\n  render: () ->\n    if @state.mode is 'edit'\n      ComboChoiceEditor({ \\\n        \"model\": (@props.model),  \\\n        \"onSaveChanges\": (@onCancelEdit),  \\\n        \"onCancelEdit\": (@onCancelEdit)})\n    else\n      ComboChoiceViewer({ \\\n        \"model\": (@props.model),  \\\n        \"onEditComboChoice\": (@onEdit)})\n\nAllChoice = React.createClass\n  displayName: 'AllChoice'\n\n  render: () ->\n    React.DOM.div({\"className\": \"quantifier-choice-container viewer\"}, \n      React.DOM.span({\"className\": \"all-choice\"}, \" All of the above \")\n    )\n\nNoneChoice = React.createClass\n  displayName: 'NoneChoice'\n\n  render: () ->\n    React.DOM.div({\"className\": \"quantifier-choice-container viewer\"}, \n      React.DOM.span({\"className\": \"none-choice\"}, \" None of the above \")\n    )\n\nChoice = React.createClass\n  displayName: 'Choice'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getStateFromModel: () ->\n    content: @props.model.get('content')\n\n  getInitialState: () ->\n    @getStateFromModel()\n\n  refreshState: () ->\n    @setState @getStateFromModel()\n\n  componentDidMount: () ->\n    @props.model.on 'change', @refreshState, this\n\n  componentWillUnmount: () ->\n    @props.model.off 'change', @refreshState, this\n\n  onSaveContent: (content) ->\n    @props.model.set({content: content});\n    @props.model.save()\n\n  onDeleteChoice: () ->\n    @props.model.destroy {wait: true}\n\n  onMoveChoiceUp: () ->\n    @props.model.moveUp()\n\n  onMoveChoiceDown: () ->\n    @props.model.moveDown()\n\n  render: () ->\n    content = @state.content\n    choiceTitle = \"Choice (#{@props.model.letter()})\"\n    contentNode = switch @props.model.type()\n      when 'simple'\n        Content({ \\\n          \"prompt_add\": \"Click to add choice content.\",  \\\n          \"prompt_edit\": \"Click to edit choice.\",  \\\n          \"content\": (content),  \\\n          \"onSaveContent\": (@onSaveContent)\n          })\n      when 'combo'\n        ComboChoice({\"model\": (@props.model)})\n      when 'all'\n        AllChoice(null)\n      when 'none'\n        NoneChoice(null)\n      else\n        console.log 'Invalid choice type'\n\n    React.DOM.li({\"className\": \"choice-container has-drawer\"}, \n      (contentNode), \n      Drawer({\"title\": (choiceTitle)}, \n        Button({ \\\n          \"hidden\": (not @props.model.canMoveUp()),  \\\n          \"actionTitle\": \"Move choice up\",  \\\n          \"actionText\": \"Move up\",  \\\n          \"actionName\": \"MoveUp\",  \\\n          \"onAction\": (@onMoveChoiceUp)\n          }), \n        Button({ \\\n          \"hidden\": (not @props.model.canMoveDown()),  \\\n          \"actionTitle\": \"Move choice down\",  \\\n          \"actionText\": \"Move down\",  \\\n          \"actionName\": \"MoveDown\",  \\\n          \"onAction\": (@onMoveChoiceDown)\n          }), \n        Button({ \\\n          \"actionTitle\": \"Delete this choice\",  \\\n          \"actionText\": \"Delete choice\",  \\\n          \"actionName\": \"DeleteChoice\",  \\\n          \"onAction\": (@onDeleteChoice)\n          })\n      )\n    )\n\nmodule.exports = Choice\n",
    "\n\nReact = require 'react'\nReact.Addons = require 'react-addons'\n\nChoice = require './choice'\n\nChoiceList = React.createClass\n  displayName: 'ChoiceList'\n\n  propTypes:\n    collection: React.PropTypes.object.isRequired\n\n  render: () ->\n    choices = @props.collection.map (model) ->\n      Choice({\"key\": (model.id), \"model\": (model)})\n    React.DOM.ol({\"className\": \"letters\"}, \n      (choices)\n    )\n\nmodule.exports = ChoiceList\n",
    "\n\nReact = require 'react'\nReact.addons = require 'react-addons'\nQuill = require 'quilljs'\n\nViewer = React.createClass\n  displayName: 'ContentViewer'\n\n  propTypes:\n    content: React.PropTypes.string\n\n  getDefaultProps: () ->\n    onEditContent: () -> debugger\n\n  handleEdit: () ->\n    @props.onEditContent()\n\n  render: () ->\n    if @props.content? and @props.content isnt \"\"\n      React.DOM.div({\"className\": \"viewer-container hoverable\", \"onClick\": (@handleEdit)}, \n        React.DOM.button({\"className\": \"action secondary on-hover\",  \\\n          \"title\": (@props.prompt_edit),  \\\n          \"onClick\": (@handleEdit)}, \"Edit\"), \n        React.DOM.div({\"className\": \"viewer\", \"dangerouslySetInnerHTML\": (__html: @props.content)}\n        )\n      )\n    else\n      React.DOM.div({\"className\": \"prompter-container\", \"onClick\": (@handleEdit)}, \n        React.DOM.div({\"className\": \"empty-content\"}, \n          React.DOM.span({\"className\": \"prompt-add-tip\"}, (@props.prompt_add))\n        )\n      )\n\nEditor = React.createClass\n  displayName: 'ContentEditor'\n\n  getInitialState: () ->\n    objects:\n      editor: null\n\n  propTypes:\n    content: React.PropTypes.string\n\n  getDefaultProps: () ->\n    onSaveContent: () -> debugger\n    onCancelEdit: () -> debugger\n    content: ''\n    theme: 'snow'\n\n  focus: () ->\n    @state.objects.editor.focus()\n\n  initializeEditor: () ->\n    editor = new Quill @refs.editor.getDOMNode(), theme: @props.theme\n    editor.addModule 'toolbar',\n      container: @refs.toolbar.getDOMNode()\n    editor.addModule 'toolbar',\n      container: @refs.footer.getDOMNode()\n    editor.setHTML @props.content\n    @state.objects.editor = editor\n\n  componentDidMount: () ->\n    @initializeEditor()\n\n  componentDidUpdate: () ->\n    @initializeEditor()\n\n  componentWillReceiveProps: (newprops) ->\n    @state.objects.editor.setHTML newprops.content\n\n  handleSave: () ->\n    @props.onSaveContent(@state.objects.editor.getHTML())\n\n  handleCancel: () ->\n    @props.onCancelEdit(@state.objects.editor.getHTML())\n\n  render: () ->\n    React.DOM.div({\"className\": \"editor-container\"}, \n      React.DOM.div({\"className\": \"ql-box\"}, \n        React.DOM.div({\"className\": \"ql-toolbar\", \"ref\": \"toolbar\"}, \n          React.DOM.span({\"className\": \"ql-format-group\"}, \n            React.DOM.span({\"title\": \"Bold\", \"className\": \"ql-format-button ql-bold\"}), \n            React.DOM.span({\"className\": \"ql-format-separator\"}), \n            React.DOM.span({\"title\": \"Italic\", \"className\": \"ql-format-button ql-italic\"}), \n            React.DOM.span({\"className\": \"ql-format-separator\"}), \n            React.DOM.span({\"title\": \"Underline\", \"className\": \"ql-format-button ql-underline\"}), \n            React.DOM.span({\"className\": \"ql-format-separator\"}), \n            React.DOM.span({\"title\": \"Strikethrough\", \"className\": \"ql-format-button ql-strike\"})\n          ), \n          React.DOM.span({\"className\": \"ql-format-group\"}, \n            React.DOM.span({\"title\": \"List\", \"className\": \"ql-format-button ql-list\"}), \n            React.DOM.span({\"className\": \"ql-format-separator\"}), \n            React.DOM.span({\"title\": \"Bullet\", \"className\": \"ql-format-button ql-bullet\"}), \n            React.DOM.span({\"className\": \"ql-format-separator\"}), \n            React.DOM.select({\"title\": \"Text Alignment\", \"defaultValue\": \"left\", \"className\": \"ql-align\"}, \n              React.DOM.option({\"value\": \"left\", \"label\": \"Left\"}), \n              React.DOM.option({\"value\": \"center\", \"label\": \"Center\"}), \n              React.DOM.option({\"value\": \"right\", \"label\": \"Right\"}), \n              React.DOM.option({\"value\": \"justify\", \"label\": \"Justify\"})\n            )\n          ), \n          React.DOM.span({\"className\": \"ql-format-group\"}, \n            React.DOM.span({\"title\": \"Link\", \"className\": \"ql-format-button ql-link\"})\n          )\n        ), \n        React.DOM.div({\"className\": \"ql-editor\", \"ref\": \"editor\"}), \n        React.DOM.div({\"className\": \"ql-footer\", \"ref\": \"footer\"}, \n          React.DOM.button({\"className\": \"action secondary\", \"onClick\": (@handleCancel)}, \"Cancel\"), \n          React.DOM.button({\"className\": \"action primary\", \"onClick\": (@handleSave)}, \"Save\")\n        )\n      )\n    )\n\nContent = React.createClass\n  displayName: 'ContentContainer'\n  propTypes:\n    content: React.PropTypes.string\n\n  getInitialState: () ->\n    mode: 'view'\n\n  onEditContent: () ->\n    @setState\n      mode: 'edit'\n    @refs.editor.focus()\n\n  onCancelEdit: () ->\n    @setState\n      mode: 'view'\n\n  onSaveContent: (content) ->\n    @setState\n      mode: 'view'\n    @props.onSaveContent(content)\n\n  render: () ->\n    hasContent = @props.content? and @props.content isnt \"\"\n    classes = React.addons.classSet\n      'content-container': true\n      'mode-edit': @state.mode is 'edit'\n      'mode-view': @state.mode is 'view' and hasContent\n      'mode-prompt': @state.mode is 'view' and not hasContent\n    React.DOM.div({\"className\": (classes)}, \n      Editor({ \\\n        \"ref\": \"editor\",  \\\n        \"content\": (@props.content),  \\\n        \"onCancelEdit\": (@onCancelEdit),  \\\n        \"onSaveContent\": (@onSaveContent)\n        }), \n      Viewer({ \\\n        \"content\": (@props.content),  \\\n        \"prompt_add\": (@props.prompt_add),  \\\n        \"prompt_edit\": (@props.prompt_edit),  \\\n        \"onEditContent\": (@onEditContent)\n        })\n    )\n\nmodule.exports = Content\n",
    "\n\nReact = require 'react'\nReact.Addons = require 'react-addons'\n\nButton = require './action_button'\nContent = require './content'\nDrawer = require './action_drawer'\nPartList = require './part_list'\n\nExercise = React.createClass\n  displayName: 'Exercise'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getStateFromModel: () ->\n    content: @props.model.get('background')\n    parts: @props.model.get('parts')\n\n  getInitialState: () ->\n    @getStateFromModel()\n\n  refreshState: () ->\n    @setState @getStateFromModel()\n\n  componentDidMount: () ->\n    @props.model.on 'change', @refreshState, this\n    @state.parts.on 'add remove change', @refreshState, this\n\n  componentWillUnmount: () ->\n    @props.model.off 'change', @refreshState, this\n    @state.parts.off 'add remove change', @refreshState, this\n\n  onSaveBackground: (content) ->\n    @props.model.set({background: content});\n    @props.model.save()\n\n  onAddPart: () ->\n    @state.parts.create {}, wait: true\n\n  render: () ->\n    content = @state.content\n    React.DOM.div({\"className\": \"exercise-container has-drawer\"}, \n      Content({ \\\n        \"prompt_add\": \"Click to add background information for the entire exercise.\",  \\\n        \"prompt_edit\": \"Click to edit the background information for the entire exercise.\",  \\\n        \"content\": (content),  \\\n        \"onSaveContent\": (@onSaveBackground)\n        }), \n      PartList({ \\\n        \"collection\": (@state.parts)\n        }), \n      Drawer({\"title\": \"Exercise\"}, \n        Button({ \\\n          \"actionTitle\": \"Add a new part\",  \\\n          \"actionText\": \"Add part\",  \\\n          \"actionName\": \"AddPart\",  \\\n          \"onAction\": (@onAddPart)\n          })\n      )\n    )\n\nmodule.exports = Exercise\n",
    "\n\nReact = require 'react'\nReact.addons = require 'react-addons'\n\nButton = require './action_button'\nContent = require './content'\nDrawer = require './action_drawer'\nQuestionList = require './question_list'\n\nPart = React.createClass\n  displayName: 'Part'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getStateFromModel: () ->\n    content: @props.model.get('background')\n    questions: @props.model.get('questions')\n\n  getInitialState: () ->\n    @getStateFromModel()\n\n  refreshState: () ->\n    @setState @getStateFromModel()\n\n  componentDidMount: () ->\n    @props.model.on 'change', @refreshState, this\n    @state.questions.on 'add remove change', @refreshState, this\n\n  componentWillUnmount: () ->\n    @props.model.off 'change', @refreshState, this\n    @state.questions.off 'add remove change', @refreshState, this\n\n  onSaveBackground: (content) ->\n    @props.model.set({background: content});\n    @props.model.save()\n\n  onDeletePart: () ->\n    @props.model.destroy {wait: true}\n\n  onAddQuestion: () ->\n    @state.questions.create {}, wait: true\n\n  render: () ->\n    content = @state.content\n    partIndex = @props.model.collection.indexOf(@props.model) + 1\n    partTitle = \"Part #{partIndex}\"\n    React.DOM.li({\"className\": \"part-container has-drawer\"}, \n      Content({ \\\n        \"prompt_add\": \"Click to add background information for this part.\",  \\\n        \"prompt_edit\": \"Click to edit the background information for this part.\",  \\\n        \"content\": (content),  \\\n        \"onSaveContent\": (@onSaveBackground)\n        }), \n      QuestionList({ \\\n        \"collection\": (@state.questions)\n      }), \n      Drawer({\"title\": (partTitle)}, \n        Button({ \\\n          \"actionTitle\": \"Add a new question\",  \\\n          \"actionText\": \"Add question\",  \\\n          \"actionName\": \"AddQuestion\",  \\\n          \"onAction\": (@onAddQuestion)\n          }), \n        Button({ \\\n          \"actionTitle\": \"Delete this part\",  \\\n          \"actionText\": \"Delete part\",  \\\n          \"actionName\": \"DeletePart\",  \\\n          \"onAction\": (@onDeletePart)\n          })\n      )\n    )\n\nmodule.exports = Part\n",
    "\n\nReact = require 'react'\nReact.Addons = require 'react-addons'\n\nPart = require './part'\n\nPartList = React.createClass\n  displayName: 'PartList'\n\n  propTypes:\n    collection: React.PropTypes.object.isRequired\n\n  render: () ->\n    parts = @props.collection.map (model) ->\n      Part({\"key\": (model.id), \"model\": (model)})\n    classes = React.Addons.classSet\n      numbered:  parts.length > 1\n    React.DOM.ol({\"className\": (classes)}, \n      (parts)\n    )\n\nmodule.exports = PartList\n",
    "\n\nReact = require 'react'\nReact.addons = require 'react-addons'\n\nButton = require './action_button'\nChoiceList = require './choice_list'\nContent = require './content'\nDrawer = require './action_drawer'\n\nQuestion = React.createClass\n  displayName: 'Question'\n\n  propTypes:\n    model: React.PropTypes.object.isRequired\n\n  getStateFromModel: () ->\n    content: @props.model.get('stem')\n    choices: @props.model.get('choices')\n\n  getInitialState: () ->\n    @getStateFromModel()\n\n  refreshState: () ->\n    @setState @getStateFromModel()\n\n  componentDidMount: () ->\n    @props.model.on 'change', @refreshState, this\n    @state.choices.on 'add remove change', @refreshState, this\n\n  componentWillUnmount: () ->\n    @props.model.off 'change', @refreshState, this\n    @state.choices.off 'add remove change', @refreshState, this\n\n  onSaveStem: (content) ->\n    @props.model.set({stem: content});\n    @props.model.save()\n\n  onDeleteQuestion: () ->\n    @props.model.destroy {wait: true}\n\n  onAddChoice: (choiceType) ->\n    @state.choices.create {type: choiceType}, wait: true\n\n  render: () ->\n    content = @state.content\n    questionIndex = @props.model.collection.indexOf(@props.model) + 1\n    questionTitle = \"Question #{questionIndex}\"\n    React.DOM.div({\"className\": \"question-container has-drawer\"}, \n      Content({ \\\n        \"prompt_add\": \"Click to add the question stem.\",  \\\n        \"prompt_edit\": \"Click to edit the question stem.\",  \\\n        \"content\": (content),  \\\n        \"onSaveContent\": (@onSaveStem)\n        }), \n      ChoiceList({\"collection\": (@state.choices)}), \n      Drawer({\"title\": (questionTitle)}, \n        Button({ \\\n          \"hidden\": false,  \\\n          \"actionTitle\": \"Add a new choice\",  \\\n          \"actionText\": \"Add choice\",  \\\n          \"actionName\": \"simple\",  \\\n          \"onAction\": (@onAddChoice)\n          }), \n        Button({ \\\n          \"hidden\": (not @props.model.canAddCombo()),  \\\n          \"actionTitle\": \"Add a new combo choice\",  \\\n          \"actionText\": \"Add '(a) & (b)' choice\",  \\\n          \"actionName\": \"combo\",  \\\n          \"onAction\": (@onAddChoice)\n          }), \n        Button({ \\\n          \"hidden\": (not @props.model.canAddAll()),  \\\n          \"actionTitle\": \"Add a new choice\",  \\\n          \"actionText\": \"Add 'All of the above' choice\",  \\\n          \"actionName\": \"all\",  \\\n          \"onAction\": (@onAddChoice)\n          }), \n        Button({ \\\n          \"hidden\": (not @props.model.canAddNone()),  \\\n          \"actionTitle\": \"Add a new choice\",  \\\n          \"actionText\": \"Add 'None of the above' choice\",  \\\n          \"actionName\": \"none\",  \\\n          \"onAction\": (@onAddChoice)\n          }), \n        Button({ \\\n          \"actionTitle\": \"Delete this question\",  \\\n          \"actionText\": \"Delete question\",  \\\n          \"actionName\": \"DeleteQuestion\",  \\\n          \"onAction\": (@onDeleteQuestion)\n          })\n      )\n    )\n\nmodule.exports = Question\n",
    "\n\nReact = require 'react'\nReact.Addons = require 'react-addons'\n\nQuestion = require './question'\n\nQuestionList = React.createClass\n  displayName: 'QuestionList'\n\n  propTypes:\n    collection: React.PropTypes.object.isRequired\n\n  render: () ->\n    questions = @props.collection.map (model) ->\n      Question({\"key\": (model.id), \"model\": (model)})\n    React.DOM.ol(null, \n      (questions)\n    )\n\nmodule.exports = QuestionList\n"
  ],
  "sourceRoot": ""
}