{
  "version": 3,
  "file": "generated.js",
  "sources": [
    "/home/navilan/openstax/deathmatch/code/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/associated_collection.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/choices.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/exercise.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/part.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/parts.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/question.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/entities/questions.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/common/assets/js/stubs/api.js",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/app.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/behaviors/actionable.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/behaviors/content_editable.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/behaviors/deleteable.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/actions.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/choices.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/combo_choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/combo_choice_editor.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/combo_choice_viewer.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/content.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/editor.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/exercise.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/part.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/parts.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/prompter.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/quantifier_choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/question.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/questions.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/simple_choice.js.coffee",
    "/home/navilan/openstax/deathmatch/code/src/marionette/assets/js/views/viewer.js.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\n\nclass AssociatedCollection extends Backbone.Collection\n  owner: () ->\n    if @parents? and @parents[0]? then return @parents[0]\n\n  resourceName: () ->\n    @constructor.name.toLowerCase()\n\n  url: () ->\n    owner = @owner()\n    if owner then return \"#{owner.url()}/#{@resourceName()}\"\n\nmodule.exports = AssociatedCollection\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\n_ = require 'underscore'\n\nclass Choice extends Backbone.AssociatedModel\n\n  question: () ->\n    @collection.owner()\n\n  position: () ->\n    @get('position')\n\n  letter: () ->\n    String.fromCharCode(97 + @position())\n\n  canMoveUp: () ->\n    @type() is 'simple' and @position() > 0\n\n  canMoveDown: () ->\n    isBottom = () =>\n      @position() is @collection.length - 1\n    isLastSimpleChoice = () =>\n      @collection.at(@position() + 1).type() isnt 'simple'\n    @type() is 'simple' and not (isBottom() or isLastSimpleChoice())\n\n  type: () ->\n    @get('type')\n\n  weight: () ->\n    switch @type()\n      when 'simple' then -100 + @position()\n      when 'all'  then 500\n      when 'none' then 10000\n      else @get('combos').length\n\n  compare: (other) ->\n    leftWins = -1\n    rightWins = 1\n    tied = 0\n\n    simple_compare = (l, r) ->\n      switch\n        when l is r then tied\n        when l < r then leftWins\n        else rightWins\n\n    result = simple_compare @weight(), other.weight()\n    if result is tied and @type() is other.type() is 'combo'\n      res = _.find(\n              _.zip(@combos(), other.combos()),\n                ([l, r]) -> l.compare(r) isnt tied)\n      result = if res then res[0].compare(res[1]) else tied\n    result\n\n  setSelections: (ids) ->\n    if @type() is 'combo'\n      # TODO: Validate ids.\n      @set({'combos': ids})\n\n  selections: () ->\n    if @type() is 'combo'\n      simples = @collection.filter (c) => c.type() is 'simple'\n      combos = @get('combos')\n      selected = (simple) ->\n        _.contains(combos, simple.get('id'))\n      statuses = {}\n      ([simple, selected(simple)] for simple in simples)\n\n  combos: () ->\n    if @type() is 'combo'\n      selections = @get('combos').map (csc) =>\n        @collection.get(csc)\n      _.sortBy selections, (sc) -> sc.position()\n\n  moveUp: () ->\n    if @canMoveUp()\n       idx = @position()\n      @collection.move idx, idx-1\n\n  moveDown: () ->\n    if @canMoveDown()\n       idx = @position()\n      @collection.move idx, idx+1\n\nmodule.exports = Choice\n",
    "Backbone = require 'backbone'\nAssociatedCollection = require './associated_collection.js.coffee'\nChoice = require './choice.js.coffee'\n$ = require 'jquery'\n_ = require 'underscore'\n\nclass Choices extends AssociatedCollection\n  model: Choice\n\n  positionField: 'position'\n\n  initialize: () ->\n    @listenTo this, 'add remove sort', @setPositionsFromIndex\n    @listenTo this, 'change:combos', () => @sort()\n\n  comparator: (left, right) ->\n    left.compare(right)\n\n  savePositions: (options={}) ->\n    if @models.length == 0 then return\n\n    _.defaults(\n      options,\n      {\n        attrs:\n          order: _.map (@filter (model) -> model.hasChanged), (model) -> {id: model.get('id'), position: model.get(@positionField)}\n      })\n    @sync 'update', this, options\n\n  setPositionsFromIndex: () ->\n    @each (model, index) => model.set(@positionField, index)\n\n  simples: () ->\n    @filter (c) -> c.type() is 'simple'\n\n  move: (from, to) ->\n    if from instanceof Backbone.Model then from = from.get(@positionField)\n    @models.splice(to, 0, @models.splice(from, 1)[0]);\n    @setPositionsFromIndex()\n    @sort()\n    @savePositions\n      error: () =>\n        # TODO Should save original positions above and have this error function\n        # put the models back in that order.  Maybe can use Model#previousAttributes?\n        alert 'sort order could not be saved, please reload this page'\n\n\nmodule.exports = Choices\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nPart = require './part.js.coffee'\nParts = require './parts.js.coffee'\n\nclass Exercise extends Backbone.AssociatedModel\n\n  urlRoot: '/api/exercises'\n\n  relations: [\n    {\n      type: Backbone.Many\n      key: 'parts'\n      relatedModel: Part\n      collectionType: Parts\n    }\n  ]\n\n  defaults:\n    number: ''\n\nmodule.exports = Exercise\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nQuestions = require './questions.js.coffee'\n\nclass Part extends Backbone.AssociatedModel\n\n  defaults:\n    position: -1,\n    credit: -1\n\n  relations: [\n    {\n      type: Backbone.Many,\n      key: 'questions',\n      collectionType: Questions,\n    }\n  ]\n\nmodule.exports = Part\n",
    "AssociatedCollection = require './associated_collection.js.coffee'\nPart = require './part.js.coffee'\n\nclass Parts extends AssociatedCollection\n  model: Part\n\nmodule.exports = Parts\n",
    "Backbone = require 'backbone'\nrequire 'backbone-associations'\nChoices = require './choices.js.coffee'\n_ = require 'underscore'\n\nclass Question extends Backbone.AssociatedModel\n\n  defaults:\n    type: 'multiple_choice_question'\n\n  counts: () ->\n    counts = @get('choices').countBy('type')\n    _.extend {}, {all: 0, none: 0, simple: 0, combo: 0}, counts\n\n  canAddCombo: () ->\n    counts = @counts()\n    n = counts.simple\n    n >= 2 and counts.combo < (2 ** n - (n + 1))\n\n  canAddAll: () ->\n    counts = @counts()\n    counts.all is 0 and counts.simple >= 2\n\n  canAddNone: () ->\n    counts = @counts()\n    counts.simple > 1 and counts.none is 0\n\n  relations: [\n    {\n      type: Backbone.Many,\n      key: 'choices',\n      collectionType: Choices\n    }\n  ]\n\nmodule.exports = Question\n",
    "AssociatedCollection = require './associated_collection.js.coffee'\nQuestion = require './question.js.coffee'\n\nclass Questions extends AssociatedCollection\n  model: Question\n\n\nmodule.exports = Questions\n",
    "var fauxServer = require(\"./../../../../../bower_components/backbone-faux-server/backbone-faux-server.js\");\nvar _ = require(\"./../../../../../bower_components/underscore/underscore.js\");\n\n// The deathmatch namespace.\nvar deathMatch = deathMatch || {};\n\ndeathMatch.stub = function() {\n    var self = this;\n\n    function updateAttributes(from, to, atts) {\n        _.each(atts, function(att) {\n            var res = _.result(from, att);\n            if (res) {\n                to[att] = res;\n            }\n        });\n    };\n\n    self.maxIds = {\n        exercise: 1,\n        part: 0,\n        question: 0,\n        choice: 0\n    };\n\n    self.exercise = {\n        background: \"\",\n        parts: []\n    };\n\n    self.find = function(coll, id) {\n        id = parseInt(id);\n        return _.findWhere(coll, {\n            id: id\n        });\n    };\n\n    self.findPart = function(exerciseId, partId) {\n        return self.find(exercise.parts, partId);\n    };\n\n    self.findQuestion = function(exerciseId, partId, questionId) {\n        var part = self.findPart(exerciseId, partId);\n        return self.find(part.questions, questionId);\n    };\n\n    self.findChoice = function(exerciseId, partId, questionId, choiceId) {\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        return self.find(question.choices, choiceId);\n    };\n\n    self.update = function(exerciseId, data) {\n        self.exercise.background = data.background;\n        return self.exercise;\n    };\n\n    self.addPart = function(exerciseId, data) {\n        self.maxIds.part += 1;\n        data.id = self.maxIds.part;\n        data.background = \"\";\n        data.position = self.exercise.parts.length;\n        data.questions = [];\n        self.exercise.parts.push(data);\n        return data;\n    };\n\n    self.updatePart = function(exerciseId, partId, data) {\n        var part = self.findPart(exerciseId, partId);\n        updateAttributes(data, part, ['background', 'questions']);\n        return part;\n    };\n\n    self.removePart = function(exerciseId, partId) {\n        var parts = self.exercise.parts;\n        var part = self.findPart(exerciseId, partId);\n        var index = parts.indexOf(part);\n        if (index >= 0) {\n            parts.splice(index, 1);\n        }\n        return {\n            success: true\n        };\n    };\n\n    self.addQuestion = function(exerciseId, partId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        self.maxIds.question += 1;\n        data.id = self.maxIds.question;\n        data.position = questions.length;\n        data.stem = \"\";\n        data.choices = [];\n        questions.push(data);\n        return data;\n    };\n\n    self.updateQuestion = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        updateAttributes(data, question, ['stem', 'choices']);\n        return question;\n    };\n\n    self.removeQuestion = function(exerciseId, partId, questionId) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var index = questions.indexOf(question);\n        if (index >= 0) {\n            questions.splice(index, 1);\n        }\n        return {\n            success: true\n        };\n    };\n\n    self.updateChoices = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        if (data.order) {\n            _.each(choices, function(choice) {\n                choice.position = data.order[choice.id];\n            });\n            return {\n                success: true\n            };\n        } else {\n            return {\n                success: false\n            };\n        }\n    };\n\n    self.addChoice = function(exerciseId, partId, questionId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        self.maxIds.choice += 1;\n        data.id = self.maxIds.choice;\n        data.position = choices.length;\n        data.content = \"\";\n        data.combos = [];\n        choices.push(data);\n        return data;\n    };\n\n    self.updateChoice = function(exerciseId, partId, questionId, choiceId, data) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        var choice = self.findChoice(exerciseId, partId, questionId, choiceId);\n        updateAttributes(data, choice, ['position', 'content', 'combos']);\n        return choice;\n    };\n\n    self.removeChoice = function(exerciseId, partId, questionId, choiceId) {\n        var part = self.findPart(exerciseId, partId);\n        var questions = part.questions;\n        var question = self.findQuestion(exerciseId, partId, questionId);\n        var choices = question.choices;\n        var choice = self.findChoice(exerciseId, partId, questionId, choiceId);\n        var index = choices.indexOf(choice);\n        if (index >= 0) {\n            choices.splice(index, 1);\n        }\n        return {\n            succes: true\n        };\n    };\n\n    return {\n        exercise: {\n            parts: self.exercise.parts,\n            update: self.update,\n            addPart: self.addPart,\n            updatePart: self.updatePart,\n            removePart: self.removePart,\n            addQuestion: self.addQuestion,\n            updateQuestion: self.updateQuestion,\n            removeQuestion: self.removeQuestion,\n            addChoice: self.addChoice,\n            updateChoice: self.updateChoice,\n            updateChoices: self.updateChoices,\n            removeChoice: self.removeChoice\n        }\n    };\n};\n\nvar exercise = deathMatch.stub().exercise;\n\nfauxServer\n    .put(\"/api/exercises/:exerciseId\",\n        function(context, exerciseId) {\n            return exercise.update(exerciseId, context.data);\n        })\n    .post(\"/api/exercises/:exerciseId/parts\",\n        function(context, exerciseId) {\n            return exercise.addPart(exerciseId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId\",\n        function(context, exerciseId, partId) {\n            return exercise.updatePart(exerciseId, partId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId\",\n        function(context, exerciseId, partId) {\n            return exercise.removePart(exerciseId, partId);\n        })\n    .post(\"/api/exercises/:exerciseId/parts/:partId/questions\",\n        function(context, exerciseId, partId) {\n            return exercise.addQuestion(exerciseId, partId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.updateQuestion(exerciseId, partId, questionId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.removeQuestion(exerciseId, partId, questionId);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.updateChoices(exerciseId, partId, questionId, context.data);\n        })\n    .post(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices\",\n        function(context, exerciseId, partId, questionId) {\n            return exercise.addChoice(exerciseId, partId, questionId, context.data);\n        })\n    .put(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices/:choiceId\",\n        function(context, exerciseId, partId, questionId, choiceId) {\n            return exercise.updateChoice(exerciseId, partId, questionId, choiceId, context.data);\n        })\n    .del(\"/api/exercises/:exerciseId/parts/:partId/questions/:questionId/choices/:choiceId\",\n        function(context, exerciseId, partId, questionId, choiceId) {\n            return exercise.removeChoice(exerciseId, partId, questionId, choiceId);\n        });\n\nfauxServer.enable();\n",
    "Backbone = require 'backbone'\nBackbone.$ = require 'jquery'\nBackbone._ = require 'underscore'\nMarionette = require 'marionette'\nExerciseModel = require '../../../common/assets/js/entities/exercise.js.coffee'\nExerciseView = require './views/exercise.js.coffee'\nPartsCollection = require '../../../common/assets/js/entities/parts.js.coffee'\nrequire '../../../common/assets/js/stubs/api.js'\n\nExerciseEditor = new Marionette.Application\n\nExerciseEditor.addRegions\n  exerciseRegion: \"#exercise-editor\"\n\nExerciseEditor.on \"start\", () ->\n  exercise = new ExerciseModel\n    id: 1\n  exercise.set\n    parts: new PartsCollection\n  exerciseView = new ExerciseView\n    model: exercise\n  ExerciseEditor.exerciseRegion.show exerciseView\n\nExerciseEditor.start()\n",
    "Marionette = require 'marionette'\nActionsView = require '../views/actions.js.coffee'\n_ = require 'underscore'\n\nclass Actionable extends Marionette.Behavior\n\n  defaults: () ->\n    helpers:\n      number: () => @view.model.collection.indexOf(@view.model) + 1\n\n  onShow: () ->\n    @actionsView = new ActionsView\n      model: @view.model\n      helpers: _.extend({}, @defaults.helpers, @options.helpers)\n    @view.actions.show(@actionsView)\n\n  onRefreshActions: () ->\n    @actionsView?.rerender()\n\nmodule.exports = Actionable\n",
    "Marionette = require 'marionette'\n_ = require 'underscore'\n$ = require 'jquery'\n\nContentView = require '../views/content.js.coffee'\n\nclass ContentEditable extends Marionette.Behavior\n\n  #\n  # Editor modes\n  #\n  modes:\n    edit: 'mode-edit'\n    view: 'mode-view'\n    prompt: 'mode-prompt'\n\n  mode: () ->\n    switch\n      when @container().hasClass(@modes.edit)\n        'edit'\n      when @container().hasClass(@modes.view)\n        'view'\n      else\n        'prompt'\n\n  setMode: (content, mode) ->\n    @container()\n      .removeClass(_.without(@modes, @modes[mode]).join(' '))\n      .addClass(@modes[mode])\n    @contentView?.triggerMethod('mode:changed', content, mode)\n\n  viewOrPrompt: (content) ->\n    if not content?\n      content = @options.loadContent() ? \"\"\n    mode = if content is \"\" then 'prompt' else 'view'\n    @setMode content, mode\n\n  #\n  # Element accessors\n  #\n  container: () ->\n    @options.contentRegion.$el\n\n  #\n  # View event handlers\n  #\n  onContentEdit: () ->\n    @editContent()\n\n  onContentView: () ->\n    @cancelEditing()\n\n  onContentCancel: () ->\n    @cancelEditing()\n\n  onContentSave: () ->\n    @saveAndClose()\n\n  onShow: () ->\n    @contentView = new ContentView\n      prompts: @options.prompts\n    @listenTo @contentView, 'content:save', @saveAndClose\n    @listenTo @contentView, 'content:cancel', @cancelEditing\n    @listenTo @contentView, 'content:edit', @editContent\n\n    @options.contentRegion.show @contentView\n    if @mode() is 'edit'\n      @editContent()\n    else\n      @viewOrPrompt()\n\n  #\n  # API\n  #\n  cancelEditing: () ->\n    # TODO: Ask for confirmation?\n    if @mode() is 'edit'\n      @viewOrPrompt()\n\n\n  editContent: () ->\n    html = @options.loadContent()\n    @setMode html, 'edit'\n\n  save: (cb=null) ->\n    $.when(@options.saveChanges @contentView?.editorContent())\n      .done () -> cb?()\n      .fail (message) -> @showError(message)\n\n  saveAndClose: () ->\n    self = this\n    @save () -> self.viewOrPrompt()\n\nmodule.exports = ContentEditable\n",
    "Marionette = require 'marionette'\n\nclass Deletable extends Marionette.Behavior\n\n  events: () ->\n    eventName = \"click .js-delete-#{@view.model.constructor.name.toLowerCase()}-button\"\n    evs = {}\n    evs[eventName] = 'deleteClicked'\n    evs\n\n  deleteClicked: () ->\n    @view.model.destroy()\n\nmodule.exports = Deletable\n",
    "Marionette = require 'marionette'\n\nclass Actions extends Marionette.ItemView\n\n  initialize: () ->\n    @template = \"#\" + \"#{@model.constructor.name.toLowerCase()}-actions-template\"\n    @listenTo @model.collection, 'change add remove', @rerender\n\n  rerender: () ->\n    if not @isDestroyed\n      @render()\n\n  templateHelpers: () ->\n    @options.helpers\n\nmodule.exports = Actions\n",
    "Marionette = require 'marionette'\nSimpleChoiceView = require './simple_choice.js.coffee'\nComboChoiceView = require './combo_choice.js.coffee'\nQuantifierChoiceView = require './quantifier_choice.js.coffee'\nActionable = require '../behaviors/actionable.js.coffee'\nDeleteable = require '../behaviors/deleteable.js.coffee'\n\nclass Choice extends Marionette.LayoutView\n\n  id: () ->\n    part = @model.collection.owner().collection.owner().get('position')\n    question = @model.collection.owner().get('position')\n    choice = @model.position()\n    \"part-#{part}-question-#{question}-choice-#{choice}-container\"\n\n  tagName: 'li'\n  className: 'js-choice-container choice-container has-drawer'\n  template: \"#choice-container-template\"\n\n  triggers:\n    'click .js-move-up-choice-button': 'choice:moveup'\n    'click .js-move-down-choice-button': 'choice:movedown'\n\n  regions:\n    container: '.js-choice-item'\n    actions: '.js-choice-actions-container'\n\n  behaviors: () ->\n    Deleteable:\n      behaviorClass: Deleteable\n    Actionable:\n      behaviorClass: Actionable\n      helpers:\n        letter: () => @model.letter()\n        canMoveUp: () =>\n          @model.canMoveUp()\n        canMoveDown: () =>\n          @model.canMoveDown()\n\n  viewClassMap:\n    'simple': SimpleChoiceView\n    'combo': ComboChoiceView\n    'all': QuantifierChoiceView\n    'none': QuantifierChoiceView\n\n  onShow: () ->\n    ViewClass = @viewClassMap[@model.type()]\n    @container.show(new ViewClass model:@model)\n\n  onChoiceMoveup: () ->\n    @model.moveUp()\n\n  onChoiceMovedown: () ->\n    @model.moveDown()\n\nmodule.exports = Choice\n",
    "Marionette = require 'marionette'\nChoiceView = require './choice.js.coffee'\n\nclass Choices extends Marionette.CollectionView\n\n  tagName: 'ol'\n  className: 'js-choices-list letters'\n  childView: ChoiceView\n\n  onChoiceAdd: (choiceType) ->\n    @collection.create {type: choiceType}, wait: true\n\n  onAddChild: (child) ->\n    child.triggerMethod 'show'\n    @triggerMethod 'children:changed'\n\nmodule.exports = Choices\n",
    "Marionette = require 'marionette'\nComboChoiceViewer = require './combo_choice_viewer.js.coffee'\nComboChoiceEditor = require './combo_choice_editor.js.coffee'\n\nclass ComboChoice extends Marionette.LayoutView\n\n  className: 'js-combo-choice-container'\n  template: '#combo-choice-container-template'\n\n  regions:\n    viewer: '.js-combo-viewer-container'\n    editor: '.js-combo-editor-container'\n\n  onShow: () ->\n    @viewer.show(new ComboChoiceViewer model: @model)\n    @editor.show(new ComboChoiceEditor model: @model)\n\nmodule.exports = ComboChoice\n",
    "Marionette = require 'marionette'\n\nclass ComboChoiceEditor extends Marionette.ItemView\n\n  className: 'js-combo-choice-editor-container'\n  template: '#combo-choice-editor-template'\n\nmodule.exports = ComboChoiceEditor\n",
    "Marionette = require 'marionette'\n_ = require 'underscore'\n\nclass ComboChoiceViewer extends Marionette.ItemView\n\n  className: 'js-combo-choice-viewer-container'\n  template: '#combo-choice-viewer-template'\n\n  serializeData: () ->\n    combos = @model.combos()\n    if combos.length > 0\n      txt = _.initial(combos).join ', '\n      if combos.length > 1\n        txt += ' & '\n      txt += _.last(combos)\n      choiceText: txt\n    else\n      choiceText: \"Invalid selections. Please edit to fix.\"\n\nmodule.exports = ComboChoiceViewer\n",
    "Marionette = require 'marionette'\n_ = require 'underscore'\n\nEditor = require './editor.js.coffee'\nViewer = require './viewer.js.coffee'\nPrompter = require './prompter.js.coffee'\n\nclass Content extends Marionette.LayoutView\n\n  template: \"#content-template\"\n\n  regions:\n    editor: '.js-editor-container'\n    viewer: '.js-viewer-container'\n    prompter: '.js-prompter-container'\n\n  modeViews: () ->\n    edit: @editorView\n    view: @viewerView\n    prompt: @prompterView\n\n  onShow: () ->\n    @editorView = new Editor()\n    @viewerView = new Viewer()\n    @prompterView = new Prompter @options.prompts\n    @listenTo @editorView, 'content:save', () -> @triggerMethod('content:save')\n    @listenTo @editorView, 'content:cancel', () -> @triggerMethod('content:cancel')\n    @listenTo @viewerView, 'content:edit', () -> @triggerMethod('content:edit')\n    @listenTo @prompterView, 'content:edit', () -> @triggerMethod('content:edit')\n    @editor.show @editorView\n    @viewer.show @viewerView\n    @prompter.show @prompterView\n\n  onContentChanged: (content) ->\n    _.each @modeViews(), (view, mode) ->\n      view?.triggerMethod 'content:changed', content\n\n  onModeChanged: (content, mode) ->\n    @triggerMethod('content:changed', content)\n    _.each @modeViews(), (view, mode) ->\n      view?.triggerMethod 'display'\n\n  editorContent: () ->\n    @editorView?.getContent()\n\nmodule.exports = Content\n",
    "Marionette = require 'marionette'\nQuill = require 'quilljs'\n\nclass Editor extends Marionette.ItemView\n\n  options:\n    theme: 'snow'\n    editorSelector: '.ql-editor'\n    toolbarSelector: '.ql-toolbar'\n    footerSelector: '.ql-footer'\n\n  triggers:\n    'click @ui.saveButton': 'content:save'\n    'click @ui.cancelButton': 'content:cancel'\n\n  ui:\n    saveButton: '.js-editor-save-button'\n    cancelButton: '.js-editor-cancel-button'\n\n  template: \"#editor-template\"\n\n  onShow: () ->\n    if not @editor?\n      @editor = new Quill @$(@options.editorSelector)[0], theme: @options.theme\n      @editor.addModule 'toolbar',\n        container:\n          @$(@options.toolbarSelector)[0]\n      @editor.addModule 'toolbar',\n        container:\n          @$(@options.footerSelector)[0]\n\n  getContent: () ->\n    @editor?.getHTML()\n\n  onContentChanged: (html) ->\n    @editor?.setHTML html\n\n  onDisplay: () ->\n    @editor?.focus()\n\nmodule.exports = Editor\n",
    "Marionette = require 'marionette'\nPartsView = require './parts.js.coffee'\nContentEditable = require '../behaviors/content_editable.js.coffee'\n\nclass Exercise extends Marionette.LayoutView\n\n  id: 'exercise-container'\n  className: 'has-drawer'\n  template: '#exercise-template'\n\n  regions:\n    content: '.js-exercise-background-container'\n    parts: '.js-exercise-parts-container'\n\n  triggers:\n    'click .js-add-part-button': 'part:add'\n\n  behaviors: () ->\n    self = this\n    ContentEditable:\n      behaviorClass: ContentEditable\n      prompts:\n        add: 'Click here to add background information for the entire exercise.'\n        edit: 'Click to edit background information for the entire exercise.'\n      contentRegion: self.content\n      loadContent: () -> self.model.background\n      saveChanges: (content) ->\n        self.model.background = content\n        self.model.save()\n\n  onShow: () ->\n    @partsView = new PartsView\n      collection: @model.get('parts')\n    @parts.show @partsView\n\n  onPartAdd: () ->\n    @partsView?.triggerMethod 'part:add'\n\nmodule.exports = Exercise\n",
    "Marionette = require 'marionette'\nQuestionsView = require './questions.js.coffee'\nContentEditable = require '../behaviors/content_editable.js.coffee'\nActionable = require '../behaviors/actionable.js.coffee'\nDeleteable = require '../behaviors/deleteable.js.coffee'\n\nclass Part extends Marionette.LayoutView\n\n  id: () ->\n    \"part-#{@model.get('position')}-container\"\n\n  tagName: 'li'\n  className: 'part-container has-drawer'\n  template: '#part-template'\n\n  regions:\n    content: '.js-part-background-container'\n    questions: '.js-part-questions-container'\n    actions: '.js-part-actions-container'\n\n  triggers:\n    'click .js-add-question-button': 'question:add'\n\n  behaviors: () ->\n    self = this\n    Deleteable:\n      behaviorClass: Deleteable\n    Actionable:\n      behaviorClass: Actionable\n    ContentEditable:\n      behaviorClass: ContentEditable\n      prompts:\n        add: 'Click here to add background information for this part.'\n        edit: 'Click to edit background information for this part.'\n      contentRegion: self.content\n      loadContent: () -> self.model.background\n      saveChanges: (content) ->\n        self.model.background = content\n        self.model.save()\n\n  onShow: () ->\n    @questionsView = new QuestionsView\n      collection: @model.get('questions')\n    @questions.show @questionsView\n\n  onQuestionAdd: () ->\n    @questionsView?.triggerMethod 'question:add'\n\nmodule.exports = Part\n",
    "Marionette = require 'marionette'\nPartView = require './part.js.coffee'\n\nclass Parts extends Marionette.CollectionView\n\n  tagName: 'ol'\n  childView: PartView\n\n  onChildrenChanged: () ->\n    @$el.toggleClass 'numbered', @collection.length > 1\n\n  onPartAdd: () ->\n    @collection.create {}, wait: true\n\n  onRemoveChild: () ->\n    @triggerMethod 'children:changed'\n\n  onAddChild: (child) ->\n    child.triggerMethod 'show'\n    @triggerMethod 'children:changed'\n\nmodule.exports = Parts\n",
    "Marionette = require 'marionette'\n\nclass Prompter extends Marionette.ItemView\n\n  options:\n    add: \"Click to add new content.\"\n    edit: \"Click to edit content\"\n\n  triggers:\n    'click': 'content:edit'\n\n  template: \"#prompter-template\"\n\n  onContentChanged: (content) ->\n    @$el.toggleClass 'empty-content', content is ''\n\n  serializeData: () ->\n    prompts:\n      add: @options.add\n      edit: @options.edit\n\nmodule.exports = Prompter\n",
    "Marionette = require 'marionette'\n\nclass QuantifierChoice extends Marionette.ItemView\n\n  className: 'quantifier-choice-container viewer'\n  template: '#quantifier-choice-template'\n\nmodule.exports = QuantifierChoice\n",
    "Marionette = require 'marionette'\nChoicesView = require './choices.js.coffee'\nContentEditable = require '../behaviors/content_editable.js.coffee'\nActionable = require '../behaviors/actionable.js.coffee'\nDeleteable = require '../behaviors/deleteable.js.coffee'\n$ = require 'jquery'\n_ = require 'underscore'\n\nclass Question extends Marionette.LayoutView\n\n  id: () ->\n    \"part-#{@model.collection.owner().get('position')}-question-#{@model.get('position')}-container\"\n\n  initialize: () ->\n    @listenTo @model.get('choices'), 'add remove', () => @triggerMethod('refresh:actions')\n\n  tagName: 'li'\n  className: 'question-container has-drawer'\n  template: '#question-template'\n\n  regions:\n    content: '.js-question-stem-container'\n    choices: '.js-question-choices-container'\n    actions: '.js-question-actions-container'\n\n  events:\n    'click .js-add-choice-button': 'OnAddButtonClick'\n    'click .js-add-combo-choice-button': 'OnAddButtonClick'\n    'click .js-add-all-choice-button': 'OnAddButtonClick'\n    'click .js-add-none-choice-button': 'OnAddButtonClick'\n\n  behaviors: () ->\n    Deleteable:\n      behaviorClass: Deleteable\n    Actionable:\n      behaviorClass: Actionable\n      helpers:\n        canAddCombo: () =>\n          @model.canAddCombo()\n        canAddAll: () =>\n          @model.canAddAll()\n        canAddNone: () =>\n          @model.canAddNone()\n    ContentEditable:\n      behaviorClass: ContentEditable\n      prompts:\n        add: 'Click here to add the question stem.'\n        edit: 'Click to edit the question stem.'\n      contentRegion: @content\n      loadContent: () => @model.questionStem\n      saveChanges: (content) =>\n        @model.questionStem = content\n        @model.save()\n\n  onShow: () ->\n    @choicesView = new ChoicesView\n      collection: @model.get('choices')\n    @choices.show @choicesView\n\n  OnAddButtonClick: (e) ->\n    e.preventDefault()\n    e.stopPropagation()\n    _.each ['simple', 'combo', 'all', 'none'], (type) =>\n      if $(e.currentTarget).hasClass \"#{type}-choice\"\n        @choicesView?.triggerMethod 'choice:add', type\n        return false\n\nmodule.exports = Question\n",
    "Marionette = require 'marionette'\nQuestionView = require './question.js.coffee'\n\nclass Questions extends Marionette.CollectionView\n\n  tagName: 'ol'\n  childView: QuestionView\n\n  onQuestionAdd: () ->\n    @collection.create {type: 'multiple_choice_question'}, wait: true\n\n  onAddChild: (child) ->\n    child.triggerMethod 'show'\n\nmodule.exports = Questions\n",
    "Marionette = require 'marionette'\nContentEditable = require '../behaviors/content_editable.js.coffee'\n\nclass SimpleChoice extends Marionette.LayoutView\n\n  className: 'js-simple-choice-container'\n  template: '#simple-choice-template'\n\n  regions:\n    content: '.js-content-container'\n\n  behaviors: () ->\n    self = this\n    ContentEditable:\n      behaviorClass: ContentEditable\n      prompts:\n        add: 'Click here to add the choice content.'\n        edit: 'Click to edit the choice content.'\n      contentRegion: self.content\n      loadContent: () -> self.model.content\n      saveChanges: (content) ->\n        self.model.content = content\n        self.model.save()\n\nmodule.exports = SimpleChoice\n",
    "Marionette = require 'marionette'\n\nclass Viewer extends Marionette.ItemView\n\n  template: \"#viewer-template\"\n\n  triggers:\n    'click': 'content:edit'\n\n  ui:\n    content: '.js-viewer'\n\n  onContentChanged: (html) ->\n    @ui.content.html(html)\n\nmodule.exports = Viewer\n"
  ],
  "sourceRoot": ""
}